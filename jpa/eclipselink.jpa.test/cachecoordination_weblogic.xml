<!--/*******************************************************************************
* This program and the accompanying materials are made available under the 
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0 
* which accompanies this distribution. 
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at 
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*     - properties ending in .jar define jarfile names only (no path)
*     - properties ending in .lib are fully qualified jars (path and filename)
*     - properties ending in .dir are directory paths
*     - properties ending in .path are path refid names (classpath fragments)
*   - multi-word targets use hyphens '-'
*     - targets beginning with test- are reserved for high level test targets,
*       and are used in test results parsing
*     - targets typically use the form <action>-<object>-<type> (ie. package-bundle-zip)
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'  
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     pvijayaratnam - cache coordination test implementation
#******************************************************************************/-->

<!-- This ant project includes the following tasks:
        ....
-->

<project name="Eclipse Persistence Services JPA WLS CacheCoordination Testing" basedir=".">

    <property name="env" environment="env" value="env"/>
    <!-- Allows a user to overide certain user specific properties. -->
    <property file="${user.home}/weblogic.properties"/>
    <property file="test.properties"/>
    <property file="./weblogic.properties"/>
    
    <!-- WebLogic ant tasks -->
    <taskdef name="wlserver" classname="weblogic.ant.taskdefs.management.WLServer">
        <classpath>
            <pathelement location="${weblogic.home}/lib/weblogic.jar"/>
        </classpath>
    </taskdef>
    <taskdef name="wlconfig" classname="weblogic.ant.taskdefs.management.WLConfig">
        <classpath>
            <pathelement location="${weblogic.home}/lib/weblogic.jar"/>
        </classpath>
    </taskdef>
    <taskdef name="wldeploy" classname="weblogic.ant.taskdefs.management.WLDeploy">
        <classpath>
            <pathelement location="${weblogic.home}/lib/weblogic.jar"/>
        </classpath>
    </taskdef>

    <!-- Stop all servers. -->
    <target name="weblogic-stop-cachecoordination" depends="weblogic-stop-server3,weblogic-stop-server2,weblogic-stop-server1"/>
    <!-- Stop the managed server1 -->
    <target name="weblogic-stop-server1">
        <wlserver fork="true" failonerror="false" weblogichome="${weblogic.home}"
            dir="${weblogic.domain}" host="${weblogic.host}" domainname="${domain.name}" servername="${rcm.wls.server1.name}" port="${rcm.wls.server1.port}"
            username="${server.user}" password="${server.pwd}" action="shutdown">
        </wlserver>
    </target>
    <!-- Stop the managed server2 -->
    <target name="weblogic-stop-server2">
        <wlserver fork="true" failonerror="false" weblogichome="${weblogic.home}"
            dir="${weblogic.domain}" host="${weblogic.host}" domainname="${domain.name}" servername="${rcm.wls.server2.name}" port="${rcm.wls.server2.port}"
            username="${server.user}" password="${server.pwd}" action="shutdown">
        </wlserver>
    </target>
    <!-- Stop the admin server -->
    <target name="weblogic-stop-server3">
        <wlserver fork="true" failonerror="false" weblogichome="${weblogic.home}"
            dir="${weblogic.domain}" host="${weblogic.host}" domainname="${domain.name}" servername="${rcm.wls.server3.name}" port="${rcm.wls.server3.port}"
            username="${server.user}" password="${server.pwd}" action="shutdown">
        </wlserver>
    </target>
    
    <!--
        Deploy the application ear to the server.
        Note: WLS server must be running.
    -->
    <target name="weblogic-deploy">
        <wldeploy action="deploy"
            name="${application.name}" source="build/${ear.name}"
            user="${server.user}" password="${server.pwd}"
            adminurl="${server.url}" targets="${target.server}"
            failonerror="false">
        </wldeploy>
    </target>

    <!--
        Undeploy the application ear to the server.
        Note: WLS server must be running.
    -->
    <target name="weblogic-undeploy">
        <wldeploy action="undeploy" name="${application.name}"
            user="${server.user}" password="${server.pwd}"
            adminurl="${server.url}" targets="${target.server}"
            failonerror="false">
        </wldeploy>
    </target>
    
    <!-- initialize WL props for target 'run-cachecoordination-wls' -->
    <target name="init-wls">
        <property name="weblogic.domain" value="${weblogic.domain}"/>
        <property name="POLICY_OPTION" value="trackchanges"/>
        <path id="build.wls.path">
                 <pathelement path="${weblogic.home}/lib/weblogic.jar"/>
                 <pathelement path="${weblogic.domain}/lib/${eclipselink.jar}"/>
         <pathelement path="${junit.lib}"/>
         <!--pathelement path="${eclipselink.jpa.test}/weblogic.properties"/-->
        </path>
        <property name="SERVER_NAME" value="${rcm.wls.server1.name}"/>
        <property name="SERVER_VERSION" value="${weblogic.version}"/>
        <property name="is.wls" value="true"/>
    </target>

    <!-- Main target to run RCM-enabled Sessionbean tests.
         ** This target starts all servers on preconfigured domain and DataSource.
     -->
    <target name="weblogic-start-cachecoordination" depends="init-wls">
        <delete file="${weblogic.domain}/edit.lok"/>
        <delete file="${rcm.wls.server1.name}.log"/>
        <delete file="${rcm.wls.server2.name}.log"/>
    <delete file="${rcm.wls.server3.name}.log"/>
        <parallel>
            <echo message="*** starting WebLogic Server1 (also act as AdminServer)"/>
            <java classname="weblogic.Server" 
                fork="true"
                failonerror="true">
                <jvmarg value="-server"/>
                <jvmarg value="-Xms512m"/>
                <jvmarg value="-Xmx960m"/>
                <!--jvmarg value="-XXjra:delay=180,recordingtime=900,filename=./jrockit-prof.xml,latency=true,tracedepth=128,sampletime=2 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=qaott48:2124"/-->
                <env key="PATH" value="${env.JAVA_HOME}/bin:${env.PATH}"/>
                <sysproperty key="eclipselink.changePolicy" value="${POLICY_OPTION}"/>
                <sysproperty key="weblogic.Name" value="${rcm.wls.server1.name}"/>
                <sysproperty key="bea.home" value="${bea.root.dir}"/>
                <sysproperty key="weblogic.management.username" value="${server.user}"/>
                <sysproperty key="weblogic.management.password" value="${server.pwd}"/>
                <sysproperty key="java.security.police" value='"${weblogic.home}/lib/weblogic.policy"'/>
                <sysproperty key="weblogic.RootDirectory" value="${weblogic.domain}"/>
                <sysproperty key="weblogic.Stdout" value="${rcm.wls.server1.name}.log"/>
                <sysproperty key="weblogic.Stderr" value="${rcm.wls.server1.name}.err"/>
                <sysproperty key="tangosol.coherence.clusterport" value="37373"/>
                <sysproperty key="tangosol.coherence.cacheconfig" value="tang-perf-grid.xml"/>
                <!--sysproperty key="tangosol.coherence.log.level" value="9"/-->
                <classpath refid="build.wls.path"/>
            </java>
            <sequential>
                <waitfor>
                    <socket server="${rcm.wls.server1.httphost}" port="${rcm.wls.server1.port}"/>
                </waitfor>              
                <parallel>
                        <echo message="*** starting managed server: Server2 "/>
                    <java classname="weblogic.Server" 
                        fork="true"
                        failonerror="true">
                        <jvmarg value="-server"/>
                        <jvmarg value="-Xms512m"/>
                        <jvmarg value="-Xmx960m"/>
                        <jvmarg value="-XX:MaxPermSize=256m"/>
                        <env key="PATH" value="${env.JAVA_HOME}/bin:${env.PATH}"/>
                        <sysproperty key="eclipselink.changePolicy" value="${POLICY_OPTION}"/>
                        <sysproperty key="weblogic.Name" value="${rcm.wls.server2.name}"/>
                        <sysproperty key="bea.home" value="${bea.root.dir}"/>
                        <sysproperty key="weblogic.management.server" value="${rcm.wls.server1.httphost}:${rcm.wls.server1.port}"/>
                        <sysproperty key="weblogic.management.username" value="${server.user}"/>
                        <sysproperty key="weblogic.management.password" value="${server.pwd}"/>
                        <sysproperty key="java.security.police" value='"${weblogic.home}/lib/weblogic.policy"'/>
                        <sysproperty key="weblogic.RootDirectory" value="${weblogic.domain}"/>
                        <sysproperty key="weblogic.Stdout" value="${rcm.wls.server2.name}.log"/>
                        <sysproperty key="weblogic.Stderr" value="${rcm.wls.server2.name}.err"/>
                        <sysproperty key="tangosol.coherence.clusterport" value="37373"/>
                        <sysproperty key="tangosol.coherence.cacheconfig" value="/tang-perf-grid.xml"/>
                        <!--sysproperty key="tangosol.coherence.log.level" value="1"/-->
                        <classpath refid="build.wls.path"/>
                    </java>
                    <echo message="*** starting managed server: Server3 "/>
                    <java classname="weblogic.Server" 
                        fork="true"
                        failonerror="true">
                        <jvmarg value="-server"/>
                        <jvmarg value="-Xms512m"/>
                        <jvmarg value="-Xmx960m"/>
                        <jvmarg value="-XX:MaxPermSize=256m"/>
                        <env key="PATH" value="${env.JAVA_HOME}/bin:${env.PATH}"/>
                        <sysproperty key="eclipselink.changePolicy" value="${POLICY_OPTION}"/>
                        <sysproperty key="weblogic.Name" value="${rcm.wls.server3.name}"/>
                        <sysproperty key="bea.home" value="${bea.root.dir}"/>
                        <sysproperty key="weblogic.management.server" value="${rcm.wls.server1.httphost}:${rcm.wls.server1.port}"/>
                        <sysproperty key="weblogic.management.username" value="${server.user}"/>
                        <sysproperty key="weblogic.management.password" value="${server.pwd}"/>
                        <sysproperty key="java.security.police" value='"${weblogic.home}/lib/weblogic.policy"'/>
                        <sysproperty key="weblogic.RootDirectory" value="${weblogic.domain}"/>
                        <sysproperty key="weblogic.Stdout" value="${rcm.wls.server3.name}.log"/>
                        <sysproperty key="weblogic.Stderr" value="${rcm.wls.server3.name}.err"/>
                        <sysproperty key="tangosol.coherence.clusterport" value="37373"/>
                        <sysproperty key="tangosol.coherence.cacheconfig" value="tang-perf-grid.xml"/>
                        <classpath refid="build.wls.path"/>
                    </java>
                    <sequential>
                        <waitfor>
                            <and>
                                <socket server="${rcm.wls.server2.httphost}" port="${rcm.wls.server2.port}"/>
                                <socket server="${rcm.wls.server3.httphost}" port="${rcm.wls.server3.port}"/>
                            </and>
                        </waitfor>
                        <sleep seconds="60"/>
                    </sequential>
                </parallel>
            </sequential>
        </parallel>  
    </target>



</project>
