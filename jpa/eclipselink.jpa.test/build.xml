<!--/*******************************************************************************
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
* which accompanies this distribution.
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*   - multi-word targets use hyphens '-'
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     tware - initial API and implementation
#******************************************************************************/-->

<!-- This ant project includes the following tasks:
        - all (default) : compiles all JPA tests, packages test jars
        - compile : compiles all JPA tests
        - package : jars JPA persistent units and tests jars
        - test : runs JPA LRG (FullRegressionTestSuite)
        - test-lrg : runs JPA LRG (FullRegressionTestSuite, if database is Oracle, OracleJPATestSuite as well)
        - oracle-test : runs JPA Oracle-specific tests (OracleJPATestSuite and OracleJPACustomfeaturesTestSuite)
        - oracle-proxy-test : runs JPA Oracle Proxy Authentication specific tests (ProxyAuthenticationServerTestSuite)
        - test-no-weave : runs JPA LRG using no weaving (no agent)
        - test-static-weave : runs JPA LRG using static weaving

        - server-start : starts the JEE server
        - server-stop : stops the JEE server
        - server-restart : stops and restarts the JEE server (match the restart command in Eclipse)
        - server-test : runs the JPA LRG tests in the server
        - server-test-lrg : runs the JPA LRG tests in the server
        - server-test-oracle-proxy : runs the Oracle Proxy Authentication JPA tests in the server
        - server-test-sessionbean : runs the SessionBean tests in the server
        - server-test-fieldaccess-advanced : runs the Fieldaccess tests in the server
        - server-test-datatypes : runs the Datatypes tests in the server
        - server-test-datetime : runs the Datetime tests in the server

        It requires some configuration of the build.properties and test.properties to run.
    -->
<project name="eclipselink.jpa.test" default="all" basedir=".">
    <available file="../${ant.project.name}" type="dir" property="jpatest.is.local"/>
    <!-- fail message="Not running from '${ant.project.name}' directory" unless="jpatest.is.local"/ -->

    <dirname  property="jpatest.build.location" file="${ant.file.eclipselink.jpa.test}"/>
    <!-- condition property="jpatest.2.base.dir" value="../.." else="..">
        <contains string="${jpatest.build.location}" substring="jpa"/>
    </condition -->
    <property name="env" environment="env" value="env"/>

    <!-- Allows a user to overide certain user specific properties. -->
    <property file="${user.home}/build.properties"/>
    <property file="${user.home}/test.properties"/>
    <property name="eclipselink.jpa.test" value="."/>
    <property file="${eclipselink.jpa.test}/build.properties"/>
    <property file="${eclipselink.jpa.test}/local.build.properties"/>
    <property file="${eclipselink.jpa.test}/${test.properties}"/>
    <property file="${eclipselink.jpa.test}/test.properties"/>

    <!-- This checks if the trunk was checked out, or just the Eclipse projects. -->
    <available file="${eclipselink.jpa.test}/${eclipselink.core.trunk}" type="dir" property="is.trunk"/>
    <condition property="jpatest.2.base.dir" value="../.." else="..">
        <isset property="is.trunk"/>
    </condition>
    <property name="jpatest.2.common.plugins.dir" value="${jpatest.build.location}/${jpatest.2.base.dir}/plugins"/>
    <property name="jpatest.2.modelgentest.dir"   value="${jpatest.build.location}/../eclipselink.jpa.modelgen.test"/>
    <property name="jpatest.2.jpa.dir"            value="${jpatest.build.location}/../eclipselink.jpa.modelgen.test"/>
    <property name="jpatest.2.core.dir"           value="${jpatest.build.location}/${jpatest.2.base.dir}/foundation/org.eclipse.persistence.core"/>
    <property name="jpatest.2.coretest.dir"       value="${jpatest.build.location}/${jpatest.2.base.dir}/foundation/eclipselink.core.test"/>
    <property name="jpatest.2.oracle.dir"         value="${jpatest.build.location}/${jpatest.2.base.dir}/foundation/org.eclipse.persistence.oracle"/>
    <property name="jpatest.2.oracletest.dir"     value="${jpatest.build.location}/${jpatest.2.base.dir}/foundation/eclipselink.extension.oracle.test"/>
    <property name="jpatest.2.moxy.dir"           value="${jpatest.build.location}/${jpatest.2.base.dir}/moxy/org.eclipse.persistence.moxy"/>
    <property name="jpatest.2.moxy.plugins.dir"   value="${jpatest.build.location}/${jpatest.2.base.dir}/moxy/plugins"/>

    <property name="jpatest.2.plugins.dir" value="${jpatest.2.base.dir}/plugins"/>
    <property name="version.qualifier"     value="qualifier"/>
    <property name="version.string"        value="${release.version}.${version.qualifier}"/>

    <property name="modelgen.processor.jar" value="${eclipselink.modelgen.processor.prefix}_${version.string}.jar"/>
    <echo message="jpatest.build.location='${jpatest.build.location}'"/>
    <echo message="modelgen.processor.jar='${modelgen.processor.jar}'"/>

    <!-- Allows we run websphere tests from Windows & Linux both. -->
    <target name="detect-os">
        <condition property="is.windows" value="true">
            <os family="windows"/>
        </condition>
        <condition property="is.unix" value="true">
            <os family="unix"/>
        </condition>
        <condition property="suffix" value="bat">
            <isset property="is.windows"/>
        </condition>
        <condition property="suffix" value="sh">
            <isset property="is.unix"/>
        </condition>
    </target>

    <!-- This checks if the tests are run on Oracle database -->
    <condition property="is.oracle">
        <contains string="${db.driver}" substring="oracle"/>
    </condition>

    <!-- This checks if the environment is ready for proxy authentication tests -->
    <condition property="is.ready.for.proxy.authentication">
        <and>
            <isset property="is.oracle"/>
            <contains string="${oracle.proxy.authentication.is.setup}" substring="true"/>
        </and>
    </condition>

    <!-- This checks if the Apllication Server is WebSphere -->
    <condition property="is.websphere">
        <contains string="${server.name}" substring="websphere"/>
    </condition>

    <!-- This checks if the Apllication Server is JBoss -->
    <condition property="is.jboss">
        <contains string="${server.name}" substring="jboss"/>
    </condition>

    <!-- This checks if the Apllication Server is WebLogic -->
    <condition property="is.weblogic">
        <contains string="${server.name}" substring="weblogic"/>
    </condition>

    <!-- This checks if static weaving enabled -->
    <condition property="is.static.server.weaving">
        <contains string="${server.weaving}" substring="static"/>
    </condition>

    <!-- This checks if testing on nonJTA DS -->
    <condition property="is.nonjta.datasource">
        <contains string="${is.JTA}" substring="false"/>
    </condition>

    <!-- Define Spring jars needed for running JPA tests on Spring -->
    <path id="spring.path">
            <fileset dir="${spring.jlib.dir}" includes="${spring.jlib}"/>
            <pathelement path="."/>
    </path>
    <!-- This checks if the Apllication Server is applicable to run oracle jpa/customfeatures model on oracle db-->
    <condition property="run.jpa.customfeatures.model">
        <and>
            <contains string="${db.driver}" substring="oracle"/>
            <or>
                <contains string="${server.name}" substring="weblogic"/>
                <!--contains string="${server.name}" substring="websphere"/-->
                <contains string="${server.name}" substring="jboss"/>
                <contains string="${server.name}" substring="glassfish"/>
            </or>
        </and>
    </condition>

    <available file="${jpatest.2.common.plugins.dir}/${modelgen.processor.jar}" property="modelgen.jar.exist"/>


    <target name="set-app-name">
        <condition property="APP_NAME" value="">
            <contains string="${server.name}" substring="websphere"/>
        </condition>
        <condition property="APP_NAME" value="${MODEL_NAME}">
            <not>
                <isset property="is.websphere"/>
            </not>
        </condition>

        <condition property="DS_NAME" value="java:/EclipseLinkDS">
            <contains string="${server.name}" substring="jboss"/>
        </condition>
        <condition property="DS_NAME" value="jdbc/EclipseLinkDS">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="NONJTA_DS_NAME" value="java:/ELNonJTADS">
            <contains string="${server.name}" substring="jboss"/>
        </condition>
        <condition property="NONJTA_DS_NAME" value="jdbc/ELNonJTADS">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

    </target>

    <!-- Configures paths for trunk checkout. -->
    <target name="config-trunk" if="is.trunk">
        <property name="eclipselink.core.dir" value="${eclipselink.jpa.test}/${eclipselink.core.trunk}"/>
        <property name="eclipselink.core.test.dir" value="${eclipselink.jpa.test}/${eclipselink.core.test.trunk}"/>
        <property name="eclipselink.core.lib.dir" value="${eclipselink.jpa.test}/${eclipselink.plugins.trunk}"/>
        <property name="eclipselink.moxy.dir" value="${eclipselink.jpa.test}/${eclipselink.moxy.trunk}"/>
        <property name="eclipselink.moxy.lib.dir" value="${eclipselink.jpa.test}/${eclipselink.moxy.plugins.trunk}"/>
        <property name="eclipselink.extension.oracle.dir" value="${eclipselink.jpa.test}/${eclipselink.extension.oracle.trunk}"/>
        <property name="eclipselink.extension.oracle.test.dir" value="${eclipselink.jpa.test}/${eclipselink.extension.oracle.test.trunk}"/>
        <antcall target="config-compile-path" inheritRefs="true"/>
        <antcall target="config-run-path" inheritRefs="true"/>
    </target>

    <!-- Configures paths for Eclipse project checkout. -->
    <target name="config-flat" unless="is.trunk">
        <property name="eclipselink.core.dir" value="${eclipselink.core}"/>
        <property name="eclipselink.core.test.dir" value="${eclipselink.core.test}"/>
        <property name="eclipselink.core.lib.dir" value="${eclipselink.plugins}"/>
        <property name="eclipselink.moxy.dir" value="${eclipselink.moxy}"/>
        <property name="eclipselink.moxy.lib.dir" value="${eclipselink.moxy.plugins}"/>
        <property name="eclipselink.extension.oracle.dir" value="${eclipselink.extension.oracle}"/>
        <property name="eclipselink.extension.oracle.test.dir" value="${eclipselink.extension.oracle.test}"/>
        <antcall target="config-compile-path" inheritRefs="true"/>
        <antcall target="config-run-path" inheritRefs="true"/>
    </target>

    <target name="config-compile-path">
        <echo message="core.classes='${eclipselink.core.dir}/${classes.dir}'"/>
        <echo message="coretest.classes='${eclipselink.core.test.dir}/${classes.dir}'"/>

        <path id="compile.path">
            <pathelement path="${eclipselink.core.dir}/${classes.dir}"/>
            <pathelement path="${eclipselink.jpa}/${classes.dir}"/>
            <pathelement path="${eclipselink.core.test.dir}/${classes.dir}"/>
            <pathelement path="${eclipselink.core.test.dir}/${eclipselink.tests.jar}"/>
            <fileset dir="${eclipselink.jpa}/../${plugins.dir}"
                includes="${eclipselink.jpa.depend}"/>

            <pathelement path="${eclipselink.core.lib.dir}/${persistence.jar.testing}"/>
            <fileset
                dir="${eclipselink.core.lib.dir}"
                includes="${eclipselink.core.depend}"/>
            <pathelement path="${eclipselink.moxy.dir}/${classes.dir}"/>
            <fileset
                dir="${eclipselink.moxy.lib.dir}"
                includes="${eclipselink.moxy.depend}"/>
            <pathelement path="${eclipselink.jar.name}"/>
            <pathelement path="${junit.lib}"/>
            <pathelement path="${eclipselink.plugins}/${antlr}"/>
            <pathelement path="${eclipselink.plugins}/${asm}"/>
            <!-- Needed for performance tests comparing with hibernate.>
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset-->
            <!-- Needed for tests using coherence.>
            <fileset dir="${coherence.dir}">
                <include name="*.jar"/>
            </fileset-->
        </path>
        <path id="compile.modelgen.path">
            <pathelement path="${jpatest.2.common.plugins.dir}/${modelgen.processor.jar}"/>
            <path refid="compile.path"/>
        </path>
        <path id="compile.server.path">
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.spatial.lib}"/>
        </path>
    </target>

    <!-- Default ant target, compiles and packages test jars, does not run tests. -->
    <target name="all" depends="clean, init, compile, package" description="build EclipseLink JPA testing jars"/>

    <!-- Creates required directories for building. -->
    <target name="init">
        <mkdir dir="${eclipselink.jpa.test}/${run.dir}"/>
        <mkdir dir="${eclipselink.jpa.test}/${classes.dir}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.annotation.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.only.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.extended.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.merge.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.validation.failed.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.field.access.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.properties}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.pu.with.spaces}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.cascade.deletes}"/>
        <!--mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.pu.with.multibyte}"/-->
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${jpa.performance}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.metamodel.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.delimited.model}"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.beanvalidation.model}"/>
    </target>

    <target name="model-compile" description="compile models that need canonical processing">
        <javac
            srcdir="${SRC_PATH}"
            destdir="${DEST_PATH}"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="${MODEL_PATH}/**/*.java"/>
            <!-- compilerarg value="-Xlint:unchecked" compiler="javac1.6"/ -->
            <compilerarg value="-Aeclipselink.persistencexml=${PERSISTENCE_XML_PATH}" compiler="javac1.6"/>
        	<!-- compilerarg value="-Aeclipselink.canonicalmodel.prefix=_" compiler="javac1.6"/ -->
           <classpath refid="${COMPILE_PATH_REF}"/>
        </javac>
    </target>

    <!-- Compiles all tests. -->
    <target name="compile" description="compile EclipseLink testing"
            depends="init, config-trunk, config-flat,
                     compile-with-modelgen, compile-standard, compile-springplatform, compile-criteria, compile-fullregression"/>

    <target name="compile-with-modelgen">
        <!-- ModelGen debug code: should never fail, but in production even if it would we don't want to stop so commented out -->
        <!-- fail message="'${jpatest.2.common.plugins.dir}/${modelgen.processor.jar}' not found." unless="modelgen.jar.exist"/ -->
        <copy todir="${jpatest.build.location}/${classes.dir}">
            <fileset dir="${jpatest.build.location}/${resource.dir}" includes="eclipselink-canonical-meta-model/persistence.xml"/>
        </copy>
        <!-- Copy to META-INF because IBM Compiler apparently is no longer recognizing -A (temporary) -->
        <copy todir="${jpatest.build.location}/${classes.dir}/META-INF">
            <fileset dir="${jpatest.build.location}/${resource.dir}/eclipselink-canonical-meta-model" includes="persistence.xml"/>
        </copy>
        <antcall target="model-compile" inheritRefs="true">
            <param name="SRC_PATH" value="${eclipselink.jpa.test}/${src.dir}"/>
            <param name="DEST_PATH" value="${eclipselink.jpa.test}/${classes.dir}"/>
            <param name="MODEL_PATH" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="PERSISTENCE_XML_PATH" value="eclipselink-canonical-meta-model/persistence.xml"/>
            <param name="COMPILE_PATH_REF" value="compile.modelgen.path"/>
        </antcall>
        <!-- This persistence.xml MUST be deleted because tests will pick it up otherwise and fail -->
        <delete dir="${jpatest.build.location}/${classes.dir}/META-INF"/>
        <available file="${jpatest.build.location}/${classes.dir}/org/eclipse/persistence/testing/models/jpa/advanced/Address_.class" property="modelgen.created.classes.exist"/>
    </target>

    <target name="compile-standard">
        <javac srcdir="${eclipselink.jpa.test}/${src.dir}"
               destdir="${eclipselink.jpa.test}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/advanced/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/FullRegressionTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/AllCMP3TestRunModel.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java"/>
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-fullregression">
        <javac srcdir="${eclipselink.jpa.test}/${src.dir}"
               destdir="${eclipselink.jpa.test}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/tests/jpa/FullRegressionTestSuite.java"/>
            <include name="org/eclipse/persistence/testing/tests/jpa/AllCMP3TestRunModel.java"/>
            <include name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java"/>
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-springplatform" if="is.spring">
        <javac srcdir="${eclipselink.jpa.spring.test}/${src.dir}"
               destdir="${eclipselink.jpa.test}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/framework/server/**"/>
            <classpath>
                <path refid="compile.path"/>
                <path refid="spring.path"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-criteria" if="modelgen.created.classes.exist">
       <!--  Compile the Modelgen (criteria metamodel) Tests -->
       <!--  *** Depends upon JPA Test Framework having been compiled already -->
       <echo message="Compile the Modelgen (criteria metamodel) Tests"/>
       <javac srcdir="${jpatest.2.modelgentest.dir}/${src.dir}"
               destdir="${jpatest.build.location}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/**"/>
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <!-- Packages JPA persistent unit test jars. -->
    <target name="package" depends="config-trunk, config-flat, package-annotation, package-ddl, package-xml-only, package-xml-merge, package-xml-extended, package-validation-failed, package-jpa-advanced-field-access, package-jpa-advanced-properties, package-jpa-pu_with_spaces, package-jpa-performance, package-cascade-deletes, package-jpa-metamodel, package-delimited, package-beanvalidation" description="build EclipseLink jar">
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.tests.jar}">
           <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                    includes="org/eclipse/persistence/testing/framework/**/*.class,
                        org/eclipse/persistence/testing/tests/**/*.class"/>
        </jar>
    </target>

    <!-- Copy Spring specified ***spring.xml, appContext.properties and persistence.xml to default build location-->
    <target name="prepare-spring-xmls" depends="init, config-trunk, config-flat" if="is.spring">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}">
            <fileset dir="${eclipselink.jpa.spring.test}/resource/jpa-spring" includes="appContext.properties"/>
        </copy>
        <replace dir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}" token='%%dbURL%%' value="${db.url}">
            <include name="appContext.properties"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}" token='%%driverClass%%' value="${db.driver}">
            <include name="appContext.properties"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}" token='%%dbUser%%' value="${db.user}">
            <include name="appContext.properties"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}" token='%%dbPassword%%' value="${db.pwd}">
            <include name="appContext.properties"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}" token='%%dbPlatform%%' value="${db.platform}">
            <include name="appContext.properties"/>
        </replace>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}/META-INF" overwrite="true">
            <fileset dir="${eclipselink.jpa.test}/${resource.dir}/${MODEL_NAME}/spring" includes="persistence.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}">
            <fileset dir="${eclipselink.jpa.spring.test}/resource/jpa-spring" includes="**spring.xml"/>
        </copy>
    </target>

    <!-- Copy OSGi specified persistence.xml to default build location-->
    <target name="prepare-osgi-xmls" depends="init, config-trunk, config-flat" if="is.osgi">
        <condition property="TEST_WEAVING" value="true" else="false">
            <equals arg1="${test.weaving}" arg2="-DTEST_NO_WEAVING=false" casesensitive="false" trim="true"/>
        </condition>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}/META-INF" overwrite="true">
            <fileset dir="${eclipselink.jpa.test}/${resource.dir}/${MODEL_NAME}/osgi" includes="persistence.xml"/>
        </copy>
        <replaceregexp file="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}/META-INF/persistence.xml"
            match='property name="eclipselink.weaving"\s+value="false"'
            replace='property name="eclipselink.weaving" value="${TEST_WEAVING}"'
        />
    </target>

	<target name="package-annotation" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.annotation.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.annotation.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.annotation.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/"
                     excludes="org/eclipse/persistence/testing/models/jpa/xml/**
                               org/eclipse/persistence/testing/models/jpa/ddlgeneration/**
                               org/eclipse/persistence/testing/models/jpa/delimited/**
                               org/eclipse/persistence/testing/models/jpa/validationfailed/**
                               org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced/**
                               org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties/**
                               org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced/**
                               org/eclipse/persistence/testing/models/jpa/beanvalidation/**
                               org/eclipse/persistence/testing/models/weaving/**"/>
        </copy>
        <antcall target="prepare-spring-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.annotation.model}"/>
        </antcall>
        <antcall target="prepare-osgi-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.annotation.model}"/>
        </antcall>
		<jar jarfile="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.annotation.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-ddl" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.ddl.generation.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.ddl.generation.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.ddl.generation.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/ddlgeneration/**,
                                org/eclipse/persistence/testing/models/jpa/xml/merge/inherited**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.ddl.generation.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.ddl.generation.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-only" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.only.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.xml.only.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.only.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/**"
                     excludes="org/eclipse/persistence/testing/models/jpa/xml/merge/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.xml.only.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.only.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-cascade-deletes" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.cascade.deletes}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.cascade.deletes}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.cascade.deletes}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/cascadedeletes/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.cascade.deletes}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.cascade.deletes}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-extended" depends="">
      <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.extended.model}/META-INF">
          <fileset dir="${eclipselink.jpa.test}/resource/eclipselinkorm/${eclipselink.xml.extended.model}" includes="*.xml"/>
      </copy>
      <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.extended.model}">
          <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                   includes="org/eclipse/persistence/testing/models/jpa/xml/advanced/**,
                             org/eclipse/persistence/testing/models/jpa/xml/relationships/**,
                             org/eclipse/persistence/testing/models/jpa/xml/complexaggregate/**"
                   excludes="org/eclipse/persistence/testing/models/jpa/xml/relationships/unidirectional/**"/>
      </copy>
      <jar jarfile="${eclipselink.jpa.test}/${eclipselink.xml.extended.model}.jar">
          <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.extended.model}">
          </fileset>
      </jar>
    </target>

    <target name="package-xml-merge" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.merge.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.xml.merge.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.merge.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/merge/**"
                     excludes="org/eclipse/persistence/testing/models/jpa/xml/merge/inhertied/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.xml.merge.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.xml.merge.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-validation-failed" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.validation.failed.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.validation.failed.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.validation.failed.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/validationfailed/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.validation.failed.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.validation.failed.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-advanced-field-access" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.field.access.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.advanced.field.access.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.field.access.model}/">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.advanced.field.access.model}" includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships/*"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.field.access.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced/**"/>
        </copy>
        <antcall target="prepare-spring-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.advanced.field.access.model}"/>
        </antcall>
        <antcall target="prepare-osgi-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.advanced.field.access.model}"/>
        </antcall>
		<jar jarfile="${eclipselink.jpa.test}/${eclipselink.advanced.field.access.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.field.access.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-advanced-properties" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.properties}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.advanced.properties}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.properties}/">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.advanced.properties}" includes="org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties/*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.properties}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.advanced.properties}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.advanced.properties}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-pu_with_spaces" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.pu.with.spaces}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.pu.with.spaces}" includes="*.xml"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.pu.with.spaces}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.pu.with.spaces}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-pu_with_multibyte" depends="">
        <!--copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.pu.with.multibyte}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.pu.with.multibyte}" includes="*.xml"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.pu.with.multibyte}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.pu.with.multibyte}">
            </fileset>
        </jar-->
    </target>

    <target name="package-jpa-performance" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${jpa.performance}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${jpa.performance}/META-INF" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${jpa.performance}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/performance/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${jpa.performance}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${jpa.performance}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-metamodel" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.metamodel.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.metamodel.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.metamodel.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/metamodel/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.metamodel.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.metamodel.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-delimited" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.delimited.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.delimited.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.delimited.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/delimited/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.delimited.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.delimited.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-beanvalidation" depends="">
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.beanvalidation.model}/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/${eclipselink.beanvalidation.model}" includes="*.xml"/>
        </copy>
        <copy todir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.beanvalidation.model}">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/beanvalidation/**"/>
        </copy>
        <jar jarfile="${eclipselink.jpa.test}/${eclipselink.beanvalidation.model}.jar">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}/${eclipselink.beanvalidation.model}">
            </fileset>
        </jar>
    </target>

    <target name="clean" description="Clean the build">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${eclipselink.jpa.test}/${classes.dir}"/>
            <fileset dir="${eclipselink.jpa.test}/${build.dir}"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.tests.jar}"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.ddl.generation.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.xml.only.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.xml.extended.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.xml.merge.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.validation.failed.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.advanced.field.access.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.advanced.properties}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.pu.with.spaces}.jar"/>
            <!--fileset file="${eclipselink.jpa.test}/${eclipselink.pu.with.multibyte}.jar"/-->
            <fileset file="${eclipselink.jpa.test}/${jpa.performance}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.metamodel.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/woven*.jar"/>
            <fileset file="${eclipselink.jpa.test}/*.ear"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.cascade.deletes}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.delimited.model}.jar"/>
            <fileset file="${eclipselink.jpa.test}/${eclipselink.beanvalidation.model}.jar"/>
        </delete>
    </target>

    <!-- Testing -->

    <!-- Classpath used for running tests. -->
    <target name="config-run-path">
        <path id="run.classpath">
            <pathelement path="${eclipselink.jpa.test}/${classes.dir}"/>
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.tests.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.ddl.generation.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.xml.only.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.xml.merge.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.validation.failed.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.advanced.field.access.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.advanced.properties}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.pu.with.spaces}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.cascade.deletes}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${jpa.performance}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.metamodel.model}.jar"/>
            <!--pathelement path="${eclipselink.jpa.test}/${eclipselink.pu.with.multibyte}.jar"/-->
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.delimited.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.beanvalidation.model}.jar"/>
        </path>
        <path id="run.extended.classpath">
            <pathelement path="${eclipselink.jpa.test}/${classes.dir}"/>
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.tests.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.xml.extended.model}.jar"/>
        </path>
        <path id="run.performance.classpath">
            <pathelement path="${eclipselink.jpa.test}/${classes.dir}"/>
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.tests.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${jpa.performance}.jar"/>
        </path>
         <path id="run.oracle.classpath">
            <path refid="run.classpath"/>
                        <!-- Currently the Oracle extensions are included to allow running Oracle extensions tests from here. -->
            <pathelement path="${eclipselink.extension.oracle.test.dir}/${classes.dir}"/>
            <pathelement path="${eclipselink.extension.oracle.dir}/${classes.dir}"/>
            <pathelement path="${eclipselink.extension.oracle.dir}/eclipselink-extension-oracle.jar"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.xdb.lib}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.xmlparserv2.lib}"/>
            <pathelement path="${eclipselink.extension.oracle.test.dir}/${eclipselink.struct.converter.model}.jar"/>
            <pathelement path="${eclipselink.extension.oracle.test.dir}/${eclipselink.timestamptz.model}.jar"/>
            <pathelement path="${eclipselink.extension.oracle.test.dir}/${eclipselink.customfeatures.model}.jar"/>
            <pathelement path="${eclipselink.extension.oracle.test.dir}/${eclipselink.proxyauthentication.model}.jar"/>
            <pathelement path="${eclipselink.extension.oracle.test.dir}/${eclipselink.jpa.oracle}-tests.jar"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.spatial.lib}"/>
        </path>
    </target>

    <!-- Clean all build generated content. -->
    <target name="clean-test" description="Clean the test">
        <delete dir="${eclipselink.jpa.test}/${report.dir}"/>
        <delete dir="${eclipselink.jpa.test}/${run.dir}"/>
        <mkdir dir="${eclipselink.jpa.test}/${report.dir}"/>
        <mkdir dir="${eclipselink.jpa.test}/${run.dir}"/>
    </target>

    <!-- Default test target, run the LRG -->
    <target name="test" depends="clean-test, config-trunk, config-flat">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="${test.class}"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs LRG (FullRegressionTestSuite) with agent. -->
    <target name="test-lrg" depends="clean-test, config-trunk, config-flat">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="oracle-test" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs JPA Oracle-specific tests. -->
    <target name="oracle-test" if="is.oracle" depends="config-trunk, config-flat">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.OracleJPATestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="oracle-proxy-test" inheritRefs="true"/>
    </target>

    <!-- Oracle proxy authentication needs to be setup for the tests. -->
    <target name="oracle-proxy-test" if="is.ready.for.proxy.authentication">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.proxyauthentication.ProxyAuthenticationServerTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
    </target>

    <!-- Runs SRG (EntityManagerJUnitTestSuite) with agent. -->
    <target name="test-srg" depends="clean-test,config-trunk, config-flat">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.advanced.EntityManagerJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs FullRegressionTestSuite with no agent. TEST_NO_WEAVING property informs tests that no weaving was done. -->
    <target name="test-no-weave" depends="clean-test,config-trunk, config-flat">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="${test.class}"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-DTEST_NO_WEAVING=true"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs FullRegressionTestSuite with static weaving. -->
    <target name="test-static-weave" depends="clean-test, config-trunk, config-flat, run-weaver">
        <path id="run.classpath.static">
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.annotation.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.ddl.generation.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.xml.only.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.xml.merge.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.validation.failed.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.advanced.field.access.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.advanced.properties}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.pu.with.spaces}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.cascade.deletes}.jar"/>
            <!--pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.pu.with.multibyte}.jar"/-->
            <pathelement path="${eclipselink.jpa.test}/woven-${jpa.performance}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.metamodel.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.delimited.model}.jar"/>
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.beanvalidation.model}.jar"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${classes.dir}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.tests.jar}"/>
            <path refid="compile.path"/>
        </path>
        <path id="run.extended.classpath.static">
            <pathelement path="${eclipselink.jpa.test}/woven-${eclipselink.xml.extended.model}.jar"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${eclipselink.jpa.test}/${classes.dir}"/>
            <pathelement path="${eclipselink.jpa.test}/${eclipselink.tests.jar}"/>
            <path refid="compile.path"/>
        </path>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="${test.class}"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath.static"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath.static"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Prompt runner test target, runs test.class from test.properties (default is LRG). -->
    <target name="test-prompt" depends="clean-test,config-trunk, config-flat">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="${test.class}"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance" depends="clean-test,config-trunk, config-flat">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs concurrency tests. -->
    <target name="test-concurrency" depends="clean-test,config-trunk, config-flat">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAConcurrencyComparisonModel"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Tests concurrency inside the JEE server or cluster. -->
    <target name="server-test-concurrency">
        <antcall target="server-run-all-prompt" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="performance"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/performance"/>
            <param name="MODEL_NAME" value="jpa-performance"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/performance"/>
            <param name="TEST_NAME" value="jpa-performance"/>
            <param name="EAR_NAME" value="jpa-performance"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAClusteredConcurrencyComparisonModel"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <!-- Runs concurrency tests comparing with Hibernate. -->
    <target name="test-concurrency-hibernate" depends="clean-test,config-trunk, config-flat">
        <path id="run.classpath.hibernate">
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.HibernateJPAConcurrencyComparisonModel"/>
            <param name="RUN_PATH" value="run.classpath.hibernate"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance-nocache" depends="clean-test,config-trunk, config-flat">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAIsolatedPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with TopLink. -->
    <target name="test-performance-toplink" depends="clean-test,config-trunk, config-flat">
        <path id="run.classpath.toplink">
            <pathelement path="${toplink.jar}"/>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.TopLinkJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.toplink"/>
            <param name="TEST_AGENT" value="-javaagent:../${toplink.jar}"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with TopLink Essentials. -->
    <target name="test-performance-essentials" depends="clean-test,config-trunk, config-flat">
        <path id="run.classpath.essentials">
            <pathelement path="${toplink-essentials.jar}"/>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.EssentialsJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.essentials"/>
            <param name="TEST_AGENT" value="-javaagent:../${toplink-essentials-agent.jar}"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with Hibernate. -->
    <target name="test-performance-hibernate" depends="clean-test,config-trunk, config-flat">
        <path id="run.classpath.hibernate">
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.HibernateJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.hibernate"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with OpenJPA. -->
    <target name="test-performance-openjpa" depends="clean-test,config-trunk, config-flat">
        <path id="run.classpath.openjpa">
            <fileset dir="${openjpa.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.OpenJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.openjpa"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Launches the testing browser -->
    <target name="test-browser" depends="config-trunk, config-flat">
        <echo>Running test browser</echo>
        <mkdir dir="${eclipselink.jpa.test}/${run.dir}"/>
        <mkdir dir="${eclipselink.jpa.test}/${report.dir}"/>
        <java classname="org.eclipse.persistence.testing.framework.ui.TestingBrowserFrame"
             fork="true"
             maxmemory="512m"
             failonerror="false"
             dir="${eclipselink.jpa.test}/${run.dir}">
            <jvmarg value="${test.agent}"/>
            <jvmarg value="${test.weaving}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${db.url}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="-Ddb.platform=${db.platform}"/>
            <classpath>
                <path refid="run.oracle.classpath"/>
            </classpath>
        </java>
    </target>

    <!-- Runs jpa srg test on Spring. -->
    <target name="test-spring-srg" depends="clean-test, config-trunk, config-flat">
        <property name="is.spring" value="true"/>
        <antcall target="all" inheritRefs="true"/>
        <antcall target="run-spring-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.advanced.FAServerTestSuite"/>
            <param name="TEST_AGENT" value="-javaagent:../${spring.jlib.dir}/instrument.jar"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-spring-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.advanced.AdvancedServerTestSuite"/>
            <param name="TEST_AGENT" value="-javaagent:../${spring.jlib.dir}/instrument.jar"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
        <antcall target="clean" inheritRefs="true"/>
    </target>
    <!-- Generic target for running tests. -->
    <target name="run-test" depends="config-trunk, config-flat">
        <echo>Running test on ${DB_URL}</echo>

        <condition property="jvmarg.db.platform" value="-Ddb.platform=${db.platform}">
            <isset property="db.platform"/>
        </condition>
        <condition property="jvmarg.db.platform" value="-Ddummy=dummy">
            <not>
                <isset property="db.platform"/>
            </not>
        </condition>

        <!-- default values for proxy test -->
        <property name="pa.connection.user" value="PA_CONN"/>
        <property name="pa.connection.password" value="PA_CONN"/>
        <property name="pa.proxyuser" value="PA_PROXY"/>
        <property name="pa.proxyuser2" value="PA_PROXY2"/>

        <junit printsummary="yes" haltonfailure="yes" fork="yes" forkmode="once" showoutput="true" maxmemory="512m" dir="${eclipselink.jpa.test}/${run.dir}">
            <sysproperty key="proxy.user.name" value="${oracle.proxy.user}"/>
            <sysproperty key="pa.connection.user" value="${pa.connection.user}"/>
            <sysproperty key="pa.connection.password" value="${pa.connection.password}"/>
            <sysproperty key="pa.proxyuser" value="${pa.proxyuser}"/>
            <sysproperty key="pa.proxyuser2" value="${pa.proxyuser2}"/>
            <jvmarg value="${TEST_AGENT}"/>
            <jvmarg value="${TEST_WEAVING}"/>
            <jvmarg value="${ORM_TESTING}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${DB_URL}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="${jvmarg.db.platform}"/>
            <classpath>
                <path refid="${RUN_PATH}"/>
            </classpath>
            <formatter type="xml"/>
            <test name="${TEST_CLASS}" haltonfailure="no" outfile="${eclipselink.jpa.test}/${report.dir}/${TEST_CLASS}-test-results">
            </test>
        </junit>
    </target>

    <!-- Generic target for running spring tests. -->
    <target name="run-spring-test" depends="config-trunk, config-flat">
        <echo>Running test on ${DB_URL}</echo>

        <condition property="jvmarg.db.platform" value="-Ddb.platform=${db.platform}">
            <isset property="db.platform"/>
        </condition>
        <condition property="jvmarg.db.platform" value="-Ddummy=dummy">
            <not>
                <isset property="db.platform"/>
            </not>
        </condition>

        <junit printsummary="yes" haltonfailure="yes" fork="yes" forkmode="once" showoutput="true" maxmemory="512m" dir="${eclipselink.jpa.test}/${run.dir}">
            <sysproperty key="TEST_SERVER_PLATFORM" value="org.eclipse.persistence.testing.framework.server.SpringPlatform"/>
            <sysproperty key="proxy.user.name" value="${oracle.proxy.user}"/>
            <jvmarg value="${TEST_AGENT}"/>
            <jvmarg value="${TEST_WEAVING}"/>
            <jvmarg value="${ORM_TESTING}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${DB_URL}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="${jvmarg.db.platform}"/>
            <classpath>
                <path refid="${RUN_PATH}"/>
                <path refid="spring.path"/>
            </classpath>
            <formatter type="xml"/>
            <test name="${TEST_CLASS}" haltonfailure="no" outfile="${eclipselink.jpa.test}/${report.dir}/${TEST_CLASS}-test-results">
            </test>
        </junit>
    </target>

    <target name="generate-report">
        <junitreport todir="${eclipselink.jpa.test}/${report.dir}">
            <fileset dir="${eclipselink.jpa.test}/${report.dir}">
                <include name="*test-results.xml"/>
            </fileset>
            <report format="noframes" todir="${eclipselink.jpa.test}/${report.dir}"/>
        </junitreport>
    </target>

    <!-- Runs the test using the PromptTestRunner -->
    <target name="run-test-prompt" depends="config-trunk, config-flat">
        <condition property="jvmarg.performance.baseline.version" value="-Dtoplink.loadbuild.baseline-version=${performance.baseline.version}">
            <isset property="performance.baseline.version"/>
        </condition>
        <condition property="jvmarg.performance.baseline.version" value="-Ddummy=dummy">
            <not>
                <isset property="performance.baseline.version"/>
            </not>
        </condition>

        <echo>Running test on ${db.url}</echo>
        <java classname="org.eclipse.persistence.testing.framework.PromptTestRunner"
             fork="true"
             maxmemory="512m"
             failonerror="false"
             dir="${eclipselink.jpa.test}/${run.dir}">
            <jvmarg value="${jvmarg.performance.baseline.version}"/>
            <jvmarg value="${TEST_AGENT}"/>
            <jvmarg value="${TEST_WEAVING}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${db.url}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="-Ddb.platform=${db.platform}"/>
            <arg value="testmodel=${TEST_CLASS}"/>
            <arg value="regressionlog=../${report.dir}/test.log"/>
            <arg value="saveresults=${should.save.results}" />
            <classpath>
                <path refid="${RUN_PATH}"/>
            </classpath>
        </java>
    </target>

    <!-- Runs EclipseLink static weaving ant task on test jars. -->
    <target name="run-weaver">
        <!-- define weaving ant task-->
        <taskdef name="weave" classname="org.eclipse.persistence.tools.weaving.jpa.StaticWeaveAntTask">
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </taskdef>
        <!-- process the weaving function-->
        <weave source= "${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"
               target = "${eclipselink.jpa.test}/woven-${eclipselink.annotation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${eclipselink.jpa.test}/${eclipselink.ddl.generation.model}.jar"
               target = "${eclipselink.jpa.test}/woven-${eclipselink.ddl.generation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.xml.only.model}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.xml.only.model}.jar"
               persistenceinfo="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
                    <pathelement path="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.xml.extended.model}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.xml.extended.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.extended.classpath"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.xml.merge.model}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.xml.merge.model}.jar"
               persistenceinfo="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
                    <pathelement path="${eclipselink.jpa.test}/${eclipselink.annotation.model}.jar"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.validation.failed.model}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.validation.failed.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.advanced.field.access.model}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.advanced.field.access.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.advanced.properties}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.advanced.properties}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.pu.with.spaces}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.pu.with.spaces}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${eclipselink.jpa.test}/${eclipselink.cascade.deletes}.jar"
               target="${eclipselink.jpa.test}/woven-${eclipselink.cascade.deletes}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <!--weave source= "${eclipselink.jpa.test}/${eclipselink.pu.with.multibyte}.jar"
               target = "${eclipselink.jpa.test}/woven-${eclipselink.pu.with.multibyte}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave-->
        <weave source= "${eclipselink.jpa.test}/${jpa.performance}.jar"
               target = "${eclipselink.jpa.test}/woven-${jpa.performance}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${eclipselink.jpa.test}/${eclipselink.metamodel.model}.jar"
               target = "${eclipselink.jpa.test}/woven-${eclipselink.metamodel.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${eclipselink.jpa.test}/${eclipselink.delimited.model}.jar"
               target = "${eclipselink.jpa.test}/woven-${eclipselink.delimited.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${eclipselink.jpa.test}/${eclipselink.beanvalidation.model}.jar"
               target = "${eclipselink.jpa.test}/woven-${eclipselink.beanvalidation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
    </target>

    <target name="run-weaver-server-test">
        <!-- define weaving ant task-->
        <taskdef name="weave" classname="org.eclipse.persistence.tools.weaving.jpa.StaticWeaveAntTask">
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </taskdef>
        <!-- process the weaving function-->
        <weave source="${eclipselink.jpa.test}/build/unwoven-${MODEL_NAME}_ejb.jar"
               target="${eclipselink.jpa.test}/build/${MODEL_NAME}_ejb.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
    </target>

    <!-- Server Testing -->
    <target name="server-install">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-install" inheritRefs="true"/>
    </target>

    <target name="server-setup" depends="detect-os">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-setup" inheritRefs="true"/>
    </target>

    <target name="server-reset">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-reset" inheritRefs="true"/>
    </target>

    <target name="server-start" depends="detect-os">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-start" inheritRefs="true"/>
    </target>

    <target name="server-stop" depends="detect-os">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-stop" inheritRefs="true"/>
    </target>

    <target name="server-restart" depends="detect-os">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-stop" inheritRefs="true"/>
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-start" inheritRefs="true"/>
    </target>

    <target name="server-deploy">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-deploy" inheritRefs="true">
            <property name="ear.name" value="${ear.name}"/>
            <property name="application.name" value="${application.name}"/>
        </ant>
    </target>

    <target name="server-undeploy">
        <ant antfile="${eclipselink.jpa.test}/${server.name}.xml" target="${server.name}-undeploy" inheritRefs="true">
            <property name="application.name" value="${application.name}"/>
        </ant>
    </target>

    <!-- Build server test client jar. -->
    <target name="server-build-client-jar" depends="config-trunk, config-flat">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${eclipselink.jpa.test}/${server.name}.properties"/>
        <mkdir dir="${eclipselink.jpa.test}/${build.dir}/META-INF"/>
        <mkdir dir="${eclipselink.jpa.test}/stage/META-INF"/>
        <javac
            srcdir="${eclipselink.jpa.test}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="org/eclipse/persistence/testing/framework/**">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="${TEST_DIR}/**/*.java"
			excludes="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.core.test.dir}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="org/eclipse/persistence/testing/framework/junit/**">
            <classpath refid="compile.server.path"/>
        </javac>
        <copy file="${eclipselink.jpa.test}/resource/server/application-client.xml" todir="stage/META-INF"/>
        <copy todir="stage">
            <fileset dir="${eclipselink.jpa.test}/" includes="*.properties"/>
        </copy>
        <filter token="server.user" value="${server.user}"/>
        <filter token="server.pwd" value="${server.pwd}"/>
        <filter token="server.factory" value="${server.factory}"/>
        <copy file="${eclipselink.jpa.test}/resource/server/jndi.properties" todir="stage" filtering="true"/>
        <jar destfile="${eclipselink.jpa.test}/${build.dir}/${TEST_NAME}_client.jar" basedir="stage"/>
        <delete dir="stage"/>
    </target>

    <!-- Build server test ejb jar. -->
    <target name="server-build-ejb-jar" depends="config-trunk, config-flat">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${eclipselink.jpa.test}/${server.name}.properties"/>
        <mkdir dir="${eclipselink.jpa.test}/stage/META-INF"/>
        <!-- Compile server test framework and test model classes. -->
        <javac
            srcdir="${eclipselink.jpa.test}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="org/eclipse/persistence/testing/framework/**">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="${TEST_DIR}/**/*.java"
			excludes="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.core.test.dir}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="org/eclipse/persistence/testing/framework/junit/**,
                org/eclipse/persistence/testing/framework/AutoVerifyTestCase.java,
                org/eclipse/persistence/testing/framework/TestCase.java,
                org/eclipse/persistence/testing/framework/TestEntity.java,
                org/eclipse/persistence/testing/framework/TestModel.java,
                org/eclipse/persistence/testing/framework/*TestHelper.java,
                org/eclipse/persistence/testing/framework/QuerySQLTracker.java,
                org/eclipse/persistence/testing/framework/TestWarningException.java,
                org/eclipse/persistence/testing/framework/TestException.java,
                org/eclipse/persistence/testing/framework/TestErrorException.java,
                org/eclipse/persistence/testing/framework/TestProblemException.java,
                org/eclipse/persistence/testing/framework/ResultInterface.java,
                org/eclipse/persistence/testing/framework/TestCollection.java,
                org/eclipse/persistence/testing/framework/PerformanceComparisonTest.java,
                org/eclipse/persistence/testing/framework/PerformanceComparisonTestCase.java,
                org/eclipse/persistence/testing/framework/TestResult.java,
                org/eclipse/persistence/testing/framework/PerformanceComparisonTestResult.java,
                org/eclipse/persistence/testing/framework/PerformanceRegressionTest.java,
                org/eclipse/persistence/testing/framework/PerformanceRegressionTestCase.java,
                org/eclipse/persistence/testing/framework/ConcurrencyTestAdapter.java,
                org/eclipse/persistence/testing/framework/ConcurrentPerformanceComparisonTest.java,
                org/eclipse/persistence/testing/framework/ConcurrentPerformanceRegressionTest.java">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="${MODEL_DIR}/**/*.java">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${eclipselink.jpa.test}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="true"
            includes="${MODEL_DIR2}/*.java">
            <classpath refid="compile.server.path"/>
        </javac>

        <copy todir="${eclipselink.jpa.test}/stage/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/server">
                <include name="persistence.xml"/>
            </fileset>
        </copy>
        <copy todir="${eclipselink.jpa.test}/stage/META-INF">
            <fileset dir="${eclipselink.jpa.test}/resource/server/">
                <include name="ejb-jar.xml"/>
            </fileset>
        </copy>

        <!--SessionBean Test need it's own ejb-jar.xml, which including ejb-def for the sessionbean -->
        <!--DDLGeneration Test need it's own persistence.xml and mapping xml files -->
        <copy todir="${eclipselink.jpa.test}/stage/META-INF" overwrite="true" failonerror="false">
            <fileset dir="${eclipselink.jpa.test}/resource/${MODEL_NAME}/server/">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <copy todir="${eclipselink.jpa.test}/stage/" overwrite="true" failonerror="false">
            <fileset dir="${eclipselink.jpa.test}/resource/${MODEL_NAME}/server/">
                <include name="tang*.xml"/>
            </fileset>
        </copy>

        <copy todir="${eclipselink.jpa.test}/stage/META-INF" overwrite="true" failonerror="false">
            <fileset dir="${eclipselink.jpa.test}/resource/${MODEL_NAME2}/server/">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%server-platform-class%%' value="${server.platform.class}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%server-platform%%' value="${server.platform}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%default%%' value="${PERSISTENCE_UNIT_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%server-weaving%%' value="${server.weaving}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%database-platform%%' value="${db.platform}">
            <include name="*.xml"/>
        </replace>
        <!-- Replace datasource type, name and transaction type -->
        <antcall target="replace-datasource-type" inheritRefs="true"/>
        <!-- Copy the canonical metamodel and criteria api test -->
        <antcall target="copy_criteria_api_canonical_model" inheritRefs="true"/>
        <!-- Create ejb jar. -->
        <antcall target="create-ejb-jar" inheritRefs="true"/>
        <antcall target="create-ejb-stubs" inheritRefs="true"/>
        <delete dir="stage"/>
    </target>

    <target name="replace-datasource-type" depends="replace-jta-datasource,replace-nonjta-datasource"/>
    
    <target name="replace-jta-datasource" unless="is.nonjta.datasource">
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%data-source-name%%' value="${DS_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%transaction-type%%' value="JTA">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%datasource-type%%' value="jta-data-source">
            <include name="*.xml"/>
        </replace>
    </target>
    
    <target name="replace-nonjta-datasource" if="is.nonjta.datasource">
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%data-source-name%%' value="${NONJTA_DS_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%transaction-type%%' value="RESOURCE_LOCAL">
            <include name="*.xml"/>
        </replace>
        <replace dir="${eclipselink.jpa.test}/stage/META-INF" token='%%datasource-type%%' value="non-jta-data-source">
            <include name="*.xml"/>
        </replace>
    </target>
    
    <target name="create-ejb-jar" depends="create-ejb-jar-without-static-weaving,create-ejb-jar-with-static-weaving"/>

    <target name="create-ejb-jar-without-static-weaving" unless="is.static.server.weaving">
        <jar destfile="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}_ejb.jar" basedir="stage"/>
    </target>

    <target name="create-ejb-jar-with-static-weaving" if="is.static.server.weaving">
        <jar destfile="${eclipselink.jpa.test}/${build.dir}/unwoven-${MODEL_NAME}_ejb.jar" basedir="stage"/>
        <antcall target="run-weaver-server-test" inheritRefs="true">
            <param name="MODEL_NAME" value="${MODEL_NAME}"/>
        </antcall>
    </target>

    <target name="copy_criteria_api_canonical_model" if="is.criteria.server.test">
        <!-- Coping the CriteriaServerTestSuite class -->
        <antcall target="compile"/>
        <copy todir="${eclipselink.jpa.test}/stage">
            <fileset dir="${eclipselink.jpa.test}/classes">
                <include name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.class"/>
                <include name="org/eclipse/persistence/testing/tests/jpa/criteria/metamodel/JUnitCriteriaSimpleTestSuite.class"/>
                <include name="org/eclipse/persistence/testing/models/jpa/advanced/*.class"/>
            </fileset>
        </copy>
    </target>

    <target name="create-ejb-stubs" depends="detect-os" if="is.websphere">
        <exec executable="${was.home}/bin/createEJBStubs.${suffix}">
            <arg line="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}_ejb.jar"/>
        </exec>
    </target>

    <!-- Build server test ear. -->
    <target name="server-build-ear">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token='%%modelname%%' value="${MODEL_NAME}">
            <include name="*.xml"/>
        </replace>
        <ear destfile="${eclipselink.jpa.test}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${eclipselink.jpa.test}/${build.dir}" includes ="${MODEL_NAME}_ejb.jar"/>
        </ear>
        <copy file="${eclipselink.jpa.test}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>

    <!-- Build the client jar, ejb jar, and ear. -->
    <target name="server-build" depends="server-build-client-jar,server-build-ejb-jar,server-build-ear"/>

    <!-- Build, deploy and run a test suite on the server. -->
    <target name="server-run-all" depends="detect-os,set-app-name">
        <antcall target="server-build" inheritRefs="true"/>
        <antcall target="server-deploy" inheritRefs="true">
            <param name="ear.name" value="${EAR_NAME}.ear"/>
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall>
        <antcall target="server-run-test" inheritRefs="true"/>
        <antcall target="server-undeploy" inheritRefs="true">
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall>
    </target>

    <!-- Build, deploy and run a test suite on the server using the prompt runner. -->
    <target name="server-run-all-prompt" depends="detect-os,set-app-name">
        <antcall target="server-build" inheritRefs="true"/>
        <!--antcall target="server-deploy" inheritRefs="true">
            <param name="ear.name" value="${EAR_NAME}.ear"/>
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall-->
        <antcall target="server-run-test-prompt" inheritRefs="true"/>
        <!--antcall target="server-undeploy" inheritRefs="true">
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall-->
    </target>

    <!-- Run an ear on the server. -->
    <target name="server-run-test" depends="config-trunk, config-flat">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${eclipselink.jpa.test}/${server.name}.properties"/>
        <path id="run.path">
            <pathelement path="${eclipselink.jpa.test}/${build.dir}/${TEST_NAME}_client.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}_ejb.jar"/>
            <fileset dir="${server.lib}" includes="${server.depend}"/>
            <path refid="compile.server.path"/>
        </path>
        <echo>Running test ${EAR_NAME} on ${server.name}</echo>
        <mkdir dir="${eclipselink.jpa.test}/${report.dir}"/>
        <junit printsummary="yes" haltonfailure="yes" failureproperty="junit.failed" fork="yes" forkmode="once" showoutput="true" maxmemory="256m" dir="${run.dir}">
            <sysproperty key="proxy.user.name" value="${oracle.proxy.user}"/>
            <sysproperty key="server.platform" value="${server.platform}"/>
            <sysproperty key="server.user" value="${server.user}"/>
            <sysproperty key="server.password" value="${server.pwd}"/>
            <sysproperty key="server.url" value="${server.url}${APP_NAME}"/>
            <sysproperty key="server.testrunner" value="${server.testrunner}"/>
            <sysproperty key="server.run" value="TRUE"/>
            <classpath refid="run.path"/>
            <formatter type="xml"/>
            <test name="${TEST_SUITE}" haltonfailure="no" outfile="${report.dir}/${TEST_SUITE}-test-results"/>
        </junit>
    </target>

    <!-- Run an ear on the server using prompt runner. -->
    <target name="server-run-test-prompt" depends="config-trunk, config-flat">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${eclipselink.jpa.test}/${server.name}.properties"/>
        <path id="run.path">
            <pathelement path="${eclipselink.jpa.test}/${build.dir}/${TEST_NAME}_client.jar"/>
            <pathelement path="${eclipselink.jpa.test}/${build.dir}/${MODEL_NAME}_ejb.jar"/>
            <fileset dir="${server.lib}" includes="${server.depend}"/>
            <path refid="compile.server.path"/>
        </path>
        <echo>Running test ${EAR_NAME} on ${server.name}</echo>
        <mkdir dir="${eclipselink.jpa.test}/${report.dir}"/>
        <condition property="jvmarg.performance.baseline.version" value="-Dtoplink.loadbuild.baseline-version=${performance.baseline.version}">
            <isset property="performance.baseline.version"/>
        </condition>
        <condition property="jvmarg.performance.baseline.version" value="-Ddummy=dummy">
            <not>
                <isset property="performance.baseline.version"/>
            </not>
        </condition>
        <java classname="org.eclipse.persistence.testing.framework.PromptTestRunner"
             fork="true"
             maxmemory="512m"
             failonerror="false"
             dir="${eclipselink.jpa.test}/${run.dir}">
            <jvmarg value="${jvmarg.performance.baseline.version}"/>
                <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
                <jvmarg value="-Ddb.driver=${db.driver}"/>
                <jvmarg value="-Ddb.url=${db.url}"/>
                <jvmarg value="-Ddb.user=${db.user}"/>
                <jvmarg value="-Ddb.pwd=${db.pwd}"/>
                <jvmarg value="-Ddb.platform=${db.platform}"/>
            <jvmarg value="-Dserver.platform=${server.platform}"/>
            <jvmarg value="-Dserver.user=${server.user}"/>
            <jvmarg value="-Dserver.password=${server.pwd}"/>
            <jvmarg value="-Dserver.url=${server.url}${APP_NAME}"/>
            <jvmarg value="-Dserver.testrunner=${server.testrunner}"/>
            <jvmarg value="-Dserver.run=TRUE"/>
            <arg value="testmodel=${TEST_SUITE}"/>
            <arg value="regressionlog=../${report.dir}/test.log"/>
            <arg value="saveresults=${should.save.results}" />
            <classpath>
                <path refid="run.path"/>
            </classpath>
        </java>
    </target>

    <target name="generate-servertest-report">
        <!-- WebLogic and WebSphere servers require specific jaxp.properties for generating report -->
        <delete file="${env.JAVA_HOME}/jre/lib/jaxp.properties" failonerror="false"/>
        <copy todir="${env.JAVA_HOME}/jre/lib" file="${eclipselink.jpa.test}/resource/${server.name}/jaxp.properties" failonerror="false"/>
        <antcall target="generate-report" inheritRefs="true"/>
        <delete file="${env.JAVA_HOME}/jre/lib/jaxp.properties" failonerror="false"/>
    </target>

    <!-- Server Tests -->
    <!-- Run the LRG -->
    <target name="server-test">
        <antcall target="server-test-lrg" inheritRefs="true"/>
    </target>

    <!-- Run all the JPA tests in the server -->
    <target name="server-test-lrg" depends="clean-test">
        <antcall target="server-test-advanced" inheritRefs="true"/>
        <antcall target="server-test-criteria" inheritRefs="true"/>
        <antcall target="server-test-datatypes" inheritRefs="true"/>
        <antcall target="server-test-datetime" inheritRefs="true"/>
        <antcall target="server-test-ddlgeneration" inheritRefs="true"/>
        <antcall target="server-test-cascadedeletes" inheritRefs="true"/>
        <antcall target="server-test-delimited" inheritRefs="true"/>
        <antcall target="server-test-fieldaccess-advanced" inheritRefs="true"/>
        <antcall target="server-test-fieldaccess-relationships" inheritRefs="true"/>
        <antcall target="server-test-inheritance" inheritRefs="true"/>
        <antcall target="server-test-inherited" inheritRefs="true"/>
        <antcall target="server-test-jpaadvancedproperties" inheritRefs="true"/>
        <antcall target="server-test-jpql" inheritRefs="true"/>
        <antcall target="server-test-lob" inheritRefs="true"/>
        <antcall target="server-test-nativeapitest" inheritRefs="true"/>
        <!-- The following model is JPA2.0 specific -->
        <!--antcall target="server-test-orphanremoval" inheritRefs="true"/-->
        <antcall target="server-test-privateowned" inheritRefs="true"/>
        <antcall target="server-test-relationships" inheritRefs="true"/>
        <antcall target="server-test-sessionbean" inheritRefs="true"/>
        <antcall target="server-test-validation" inheritRefs="true"/>
        <antcall target="server-test-xml-mergeinherited" inheritRefs="true"/>
        <antcall target="server-test-xmltest" inheritRefs="true"/>
        <!-- The following models are oracle specific -->
        <antcall target="server-test-oracle-timestamptz" inheritRefs="true"/>
        <antcall target="server-test-custom-features" inheritRefs="true"/>
        <antcall target="server-test-struct-converter" inheritRefs="true"/>
        <!-- Oracle proxy authentication needs to be setup properly for the following model -->
        <antcall target="server-test-proxy-authentication" inheritRefs="true"/>
        <antcall target="generate-servertest-report" inheritRefs="true"/>
    </target>

    <target name="server-test-advanced">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.advanced.AdvancedServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-cascadedeletes">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="cascade-deletes"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/cascadedeletes"/>
            <param name="MODEL_NAME" value="eclipselink-cascadedeletes-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/cascadedeletes"/>
            <param name="TEST_NAME" value="eclipselink-cascadedeletes-model"/>
            <param name="EAR_NAME" value="eclipselink-cascadedeletes-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.cascadedeletes.CascadeDeletesJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-criteria">
        <property name="is.criteria.server.test" value="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-model-criteria"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/criteria"/>
            <param name="TEST_NAME" value="eclipselink-advanced-model-criteria"/>
            <param name="EAR_NAME" value="eclipselink-advanced-model-criteria"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.criteria.CriteriaServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-datatypes">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/datatypes"/>
            <param name="MODEL_NAME" value="eclipselink-datatypes-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/datatypes"/>
            <param name="TEST_NAME" value="eclipselink-datatypes-model"/>
            <param name="EAR_NAME" value="eclipselink-datatypes-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.datatypes.NullBindingJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-datetime">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/datetime"/>
            <param name="MODEL_NAME" value="eclipselink-datetime-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/datetime"/>
            <param name="TEST_NAME" value="eclipselink-datetime-model"/>
            <param name="EAR_NAME" value="eclipselink-datetime-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.datetime.NullBindingJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-ddlgeneration">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="ddlGeneration"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/ddlgeneration"/>
            <param name="MODEL_NAME" value="eclipselink-ddl-generation-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/ddlgeneration"/>
            <param name="TEST_NAME" value="eclipselink-ddl-generation-model"/>
            <param name="EAR_NAME" value="eclipselink-ddl-generation-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.ddlgeneration.DDLGenerationJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-delimited">
        <copy file="${eclipselink.jpa.test}/resource/eclipselink-delimited-model/orm.xml" todir="${eclipselink.jpa.test}/resource/eclipselink-delimited-model/server" filtering="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="delimited"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/delimited"/>
            <param name="MODEL_NAME" value="eclipselink-delimited-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/delimited"/>
            <param name="TEST_NAME" value="eclipselink-delimited-model"/>
            <param name="EAR_NAME" value="eclipselink-delimited-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.delimited.DelimitedPUTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-fieldaccess-advanced">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="fieldaccess"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-field-access-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/fieldaccess/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-field-access-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-field-access-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.advanced.FAServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-fieldaccess-relationships">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships"/>
            <param name="MODEL_NAME" value="eclipselink-relationships-field-access-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/fieldaccess/relationships"/>
            <param name="TEST_NAME" value="eclipselink-relationships-field-access-model"/>
            <param name="EAR_NAME" value="eclipselink-relationships-field-access-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.relationships.FRServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-inheritance">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/inheritance"/>
            <param name="MODEL_NAME" value="eclipselink-inheritance-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/inheritance"/>
            <param name="TEST_NAME" value="eclipselink-inheritance-model"/>
            <param name="EAR_NAME" value="eclipselink-inheritance-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.inheritance.InheritanceServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-inherited">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/inherited"/>
            <param name="MODEL_NAME" value="eclipselink-inherited-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/inherited"/>
            <param name="TEST_NAME" value="eclipselink-inherited-model"/>
            <param name="EAR_NAME" value="eclipselink-inherited-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.inherited.InheritedServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpaadvancedproperties">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="JPAADVProperties"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties"/>
            <param name="MODEL_NAME" value="eclipselink-jpaadvancedproperties-model"/>
            <param name="MODEL_NAME2" value="eclipselink-advanced-properties"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/jpaadvancedproperties"/>
            <param name="TEST_NAME" value="eclipselink-jpaadvancedproperties-model"/>
            <param name="EAR_NAME" value="eclipselink-jpaadvancedproperties-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.jpaadvancedproperties.JPAAdvPropertiesJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpql">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/jpql"/>
            <param name="MODEL_NAME" value="eclipselink-jpql-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/jpql"/>
            <param name="TEST_NAME" value="eclipselink-jpql-model"/>
            <param name="EAR_NAME" value="eclipselink-jpql-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.jpql.JPQLServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-lob">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/lob"/>
            <param name="MODEL_NAME" value="eclipselink-lob-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/lob"/>
            <param name="TEST_NAME" value="eclipselink-lob-model"/>
            <param name="EAR_NAME" value="eclipselink-lob-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.lob.LobJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-nativeapitest">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/nativeapitest"/>
            <param name="MODEL_NAME" value="eclipselink-nativeapitest-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/nativeapitest"/>
            <param name="TEST_NAME" value="eclipselink-nativeapitest-model"/>
            <param name="EAR_NAME" value="eclipselink-nativeapitest-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.nativeapitest.NativeAPITests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-orphanremoval">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/orphanremoval"/>
            <param name="MODEL_NAME" value="eclipselink-orphanremoval-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/orphanremoval"/>
            <param name="TEST_NAME" value="eclipselink-orphanremoval-model"/>
            <param name="EAR_NAME" value="eclipselink-orphanremoval-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.orphanremoval.OrphanRemovalJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-privateowned">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/privateowned"/>
            <param name="MODEL_NAME" value="eclipselink-privateowned-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/privateowned"/>
            <param name="TEST_NAME" value="eclipselink-privateowned-model"/>
            <param name="EAR_NAME" value="eclipselink-privateowned-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.privateowned.PrivateOwnedJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-relationships">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/relationships"/>
            <param name="MODEL_NAME" value="eclipselink-relationships-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/relationships"/>
            <param name="TEST_NAME" value="eclipselink-relationships-model"/>
            <param name="EAR_NAME" value="eclipselink-relationships-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.relationships.RelationshipsServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-sessionbean">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.sessionbean.SessionBeanTests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <!-- This target can only be called in an Oracle High Availability environment -
        a WebLogic server configured with Multi Data Sources to connect to Oracle RAC database
    -->
    <target name="server-test-sessionbean-ha">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.sessionbean.SessionBeanHATests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-validation">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-validation-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/validation"/>
            <param name="TEST_NAME" value="eclipselink-validation-model"/>
            <param name="EAR_NAME" value="eclipselink-validation-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.validation.CMP3ValidationTestModel"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-xml-mergeinherited">
        <copy todir="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server_merge-inherited/" overwrite="true" failonerror="false">
            <fileset dir="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/">
                <include name="merge-*.xml"/>
            </fileset>
        </copy>
        <move file="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server" tofile="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server_ddl"/>
        <move file="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server_merge-inherited" tofile="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="ddlGeneration"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/merge/inherited"/>
            <param name="MODEL_NAME" value="eclipselink-xml-merge-inherited-model"/>
            <param name="MODEL_NAME2" value="eclipselink-ddl-generation-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/xml/merge/inherited"/>
            <param name="TEST_NAME" value="eclipselink-xml-merge-inherited-model"/>
            <param name="EAR_NAME" value="eclipselink-xml-merge-inherited-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.xml.merge.inherited.EntityMappingsMergeInheritedJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <move file="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server" tofile="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server_merge-inherited"/>
        <move file="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server_ddl" tofile="${eclipselink.jpa.test}/resource/eclipselink-ddl-generation-model/server"/>
    </target>

    <target name="server-test-xmltest">
        <copy todir="${eclipselink.jpa.test}/resource/eclipselink-xml-servertest-model/server/" overwrite="true" failonerror="false">
            <fileset dir="${eclipselink.jpa.test}/resource/eclipselink-xml-merge-model/">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${eclipselink.jpa.test}/resource/eclipselink-xml-only-model/">
                <include name="*.xml"/>
            </fileset>
        </copy>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-xml-servertest-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/xml"/>
            <param name="TEST_NAME" value="eclipselink-xml-servertest-model"/>
            <param name="EAR_NAME" value="eclipselink-xml-servertest-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsServerJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-oracle-timestamptz" if="is.oracle">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/timestamptz"/>
            <param name="MODEL_NAME" value="eclipselink-timestamptz-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/timestamptz"/>
            <param name="TEST_NAME" value="eclipselink-timestamptz-model"/>
            <param name="EAR_NAME" value="eclipselink-timestamptz-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.timestamptz.TimeStampTZJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>

    <target name="server-test-custom-features" if="run.jpa.customfeatures.model">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="customfeatures"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/customfeatures"/>
            <param name="MODEL_NAME" value="eclipselink-customfeatures-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/customfeatures"/>
            <param name="TEST_NAME" value="eclipselink-customfeatures-model"/>
            <param name="EAR_NAME" value="eclipselink-customfeatures-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.customfeatures.CustomFeaturesJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>

    <target name="server-test-struct-converter" if="is.oracle">
        <echo message="Creating MY_GEOMETRY datatype for spatial tests: ${db.url}..."/>
        <sql driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.pwd}"
            onerror="continue"
            >
            <classpath>
                <pathelement location="${jdbc.driver.jar}"/>
            </classpath>
CREATE OR REPLACE TYPE MY_GEOMETRY AS OBJECT (id NUMBER, geom MDSYS.SDO_GEOMETRY);
        </sql>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="structConverter"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/structconverter"/>
            <param name="MODEL_NAME" value="eclipselink-structconverter-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/structconverter"/>
            <param name="TEST_NAME" value="eclipselink-structconverter-model"/>
            <param name="EAR_NAME" value="eclipselink-structconverter-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.structconverter.StructConverterTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>

    <target name="server-test-proxy-authentication" if="is.ready.for.proxy.authentication">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="proxyauthentication"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/proxyauthentication"/>
            <param name="MODEL_NAME" value="eclipselink-proxyauthentication-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/proxyauthentication"/>
            <param name="TEST_NAME" value="eclipselink-proxyauthentication-model"/>
            <param name="EAR_NAME" value="eclipselink-proxyauthentication-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.proxyauthentication.ProxyAuthenticationServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>
    <!-- *********** CacheCoordination Test Targets -->
    <target name="server-start-cachecoordination" depends="detect-os,config-trunk, config-flat">
      <ant antfile="${eclipselink.jpa.test}/cachecoordination_${server.name}.xml" target="${server.name}-start-cachecoordination" inheritRefs="true"/>
    </target>
    <target name="server-run-test-cachecoordination" depends="detect-os,config-trunk, config-flat">
      <ant antfile="${eclipselink.jpa.test}/cachecoordination.xml" target="${server.name}-run-test-cachecoordination" inheritRefs="true"/>
    </target>
</project>
