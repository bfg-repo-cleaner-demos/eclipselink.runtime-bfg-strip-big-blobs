<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xsi:schemaLocation="xsd/eclipselink_orm_1_0.xsd" version="1.0" xmlns="http://www.eclipse.org/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <description>Advanced Test Model Instance Document</description>
    <package>org.eclipse.persistence.testing.models.jpa.xml.advanced</package>
    <converter name="ProvinceConverter" class="ProvinceConverter"/>
    <type-converter name="Long2String" data-type="String" object-type="Long"/>
    <entity name="XMLEmployee" class="Employee" access="PROPERTY">
        <customizer class="EmployeeCustomizer"/>
        <change-tracking type="AUTO"/>
        <table name="CMP3_XML_EMPLOYEE"/>
        <secondary-table name="CMP3_XML_SALARY">
            <primary-key-join-column name="E_ID" referenced-column-name="EMP_ID"/>
        </secondary-table>
        <optimistic-locking type="VERSION_COLUMN" cascade="true"/>
        <cache type="SOFT_WEAK" size="730" isolated="false" disable-hits="true" always-refresh="false" coordination-type="INVALIDATE_CHANGED_OBJECTS">
          <!-- disable-hits is set to true. Do not change it, the employee customizer will set it to false and there is a test to verify that. -->
          <expiry>1000</expiry>
        </cache>
        <object-type-converter name="sex" data-type="String" object-type="Employee$Gender">
          <conversion-value data-value="F" object-value="Female"/>
          <conversion-value data-value="M" object-value="Male"/>
        </object-type-converter>
        <object-type-converter name="CreditCard">
          <conversion-value data-value="VI" object-value="Visa"/>
          <conversion-value data-value="AM" object-value="Amex"/>
          <conversion-value data-value="MC" object-value="Mastercard"/>
          <conversion-value data-value="DI" object-value="DinersClub"/>
        </object-type-converter>
        <table-generator name="XML_EMPLOYEE_TABLE_GENERATOR" table="CMP3_XML_EMPLOYEE_SEQ" pk-column-name="SEQ_NAME" value-column-name="SEQ_COUNT" pk-column-value="XML_EMPLOYEE_SEQ"/>
        <named-query name="findAllXMLEmployeesByFirstName">
            <query>SELECT OBJECT(employee) FROM XMLEmployee employee WHERE employee.firstName = :firstname</query>
        </named-query>
        <exclude-default-listeners/>
        <exclude-superclass-listeners/>
        <entity-listeners>
            <entity-listener class="EmployeeListener">
                <pre-persist method-name="prePersist"/>
                <post-persist method-name="postPersist"/>
                <pre-remove method-name="preRemove"/>
                <post-remove method-name="postRemove"/>
                <pre-update method-name="preUpdate"/>
                <post-update method-name="postUpdate"/>
                <post-load method-name="postLoad"/>
            </entity-listener>
        </entity-listeners>
        <attributes>
            <id name="id">
                <column name="EMP_ID"/>
                <generated-value strategy="TABLE" generator="XML_EMPLOYEE_TABLE_GENERATOR"/>
            </id>
            <basic name="firstName">
                <column name="F_NAME"/>
            </basic>
            <basic name="lastName">
                <column name="L_NAME"/>
            </basic>
            <basic name="gender">
                <column name="GENDER"/>
                <convert>sex</convert>
            </basic>
            <basic name="salary">
                <column table="CMP3_XML_SALARY"/>
            </basic>
			      <basic-collection name="responsibilities">
              <value-column name="DESCRIPTION"/>
              <collection-table name="CMP3_XML_RESPONS"/>
            </basic-collection>
            <basic-map name="creditCards" fetch="EAGER">
              <key-column name="CARD"/>
              <key-converter>CreditCard</key-converter>
              <value-column name="NUMB"/>
              <value-converter>Long2String</value-converter>
              <!-- Let the collection table default in this case (EMPLOYEE_CREDITCARDS) -->
              <private-owned/>
            </basic-map>
            <version name="version">
                <column name="VERSION"/>
            </version>
            <many-to-one name="address" target-entity="Address" fetch="LAZY">
                <join-column name="ADDR_ID"/>
                <cascade>
                    <cascade-persist/>
                </cascade>
                <join-fetch>OUTER</join-fetch>
            </many-to-one>
            <many-to-one name="manager" target-entity="Employee" fetch="LAZY">
                <join-column name="MANAGER_EMP_ID" referenced-column-name="EMP_ID"/>
                <cascade>
                    <cascade-persist/>
                </cascade>
            </many-to-one>
            <one-to-many name="phoneNumbers" target-entity="PhoneNumber" mapped-by="owner">
                <cascade>
                    <cascade-all/>
                </cascade>
            </one-to-many>
            <one-to-many name="managedEmployees" target-entity="Employee" mapped-by="manager">
                <cascade>
                    <cascade-all/>
                </cascade>
            </one-to-many>
            <many-to-many name="projects" target-entity="Project">
                <order-by>name</order-by>
                <join-table name="CMP3_XML_PROJ_EMP">
                    <join-column name="EMP_ID" referenced-column-name="EMP_ID"/>
                    <inverse-join-column name="PROJ_ID" referenced-column-name="PROJ_ID"/>
                </join-table>
                <cascade>
                    <cascade-persist/>
                </cascade>
            </many-to-many>
            <embedded name="period">
                <attribute-override name="startDate">
                    <column name="START_DATE" nullable="false"/>
                </attribute-override>
                <attribute-override name="endDate">
                    <column name="END_DATE" nullable="true"/>
                </attribute-override>
            </embedded>
        </attributes>
    </entity>
    <entity name="XMLAddress" class="org.eclipse.persistence.testing.models.jpa.xml.advanced.Address" access="PROPERTY">
        <change-tracking type="DEFERRED"/>
        <table name="CMP3_XML_ADDRESS"/>
        <sequence-generator name="XML_ADDRESS_SEQUENCE_GENERATOR" sequence-name="ADDRESS_SEQ" allocation-size="25"/>
        <named-query name="findAllXMLAddressesByPostalCode">
            <query>SELECT OBJECT(address) FROM XMLAddress address WHERE address.postalCode = :postalcode</query>
        </named-query>
        <named-native-query name="findAllXMLAddresses" result-class="org.eclipse.persistence.testing.models.jpa.xml.advanced.Address">
            <query>SELECT * FROM CMP3_XML_ADDRESS</query>
        </named-native-query>
        <exclude-default-listeners/>
        <exclude-superclass-listeners/>
        <attributes>
            <id name="id">
                <column name="ADDRESS_ID"/>
                <generated-value strategy="SEQUENCE" generator="ADDRESS_SEQUENCE_GENERATOR"/>
            </id>
            <basic name="postalCode">
                <column name="P_CODE"/>
            </basic>
            <basic name="street"/>
            <basic name="city"/>
            <basic name="province">
              <convert>ProvinceConverter</convert>
            </basic>
            <basic name="country"/>
        </attributes>
    </entity>
    <entity name="XMLPhoneNumber" class="org.eclipse.persistence.testing.models.jpa.xml.advanced.PhoneNumber" access="PROPERTY">
        <change-tracking type="ATTRIBUTE"/>
        <table name="CMP3_XML_PHONENUMBER"/>
        <id-class class="org.eclipse.persistence.testing.models.jpa.xml.advanced.PhoneNumberPK"/>
        <exclude-default-listeners/>
        <exclude-superclass-listeners/>
        <attributes>
            <id name="id">
                <column name="OWNER_ID" insertable="false" updatable="false"/>
            </id>
            <id name="type">
                <column name="TYPE"/>
            </id>
            <basic name="number">
                <column name="NUMB"/>
            </basic>
            <basic name="areaCode">
                <column name="AREA_CODE"/>
            </basic>
            <many-to-one name="owner" target-entity="org.eclipse.persistence.testing.models.jpa.xml.advanced.Employee">
                <join-column name="OWNER_ID" referenced-column-name="EMP_ID"/>
            </many-to-one>
        </attributes>
    </entity>
    <entity name="XMLLargeProject" class="org.eclipse.persistence.testing.models.jpa.xml.advanced.LargeProject" access="PROPERTY">
        <table name="CMP3_XML_LPROJECT"/>
        <discriminator-value>L</discriminator-value>
        <named-query name="findXMLWithBudgetLargerThan">
            <query>SELECT OBJECT(project) FROM XMLLargeProject project WHERE project.budget >= :amount</query>
        </named-query>
        <exclude-default-listeners/>
        <exclude-superclass-listeners/>
    </entity>
    <entity name="XMLSmallProject" class="org.eclipse.persistence.testing.models.jpa.xml.advanced.SmallProject" access="PROPERTY">
        <table name="CMP3_XML_PROJECT"/>
        <discriminator-value>S</discriminator-value>
        <exclude-default-listeners/>
        <exclude-superclass-listeners/>
    </entity>
    <entity name="XMLProject" class="org.eclipse.persistence.testing.models.jpa.xml.advanced.Project" access="PROPERTY">
        <change-tracking type="OBJECT"/>
        <table name="CMP3_XML_PROJECT"/>
        <inheritance strategy="JOINED"/>
        <discriminator-value>P</discriminator-value>
        <discriminator-column name="PROJ_TYPE"/>
        <optimistic-locking type="SELECTED_COLUMNS">
          <selected-column name="VERSION"/>
        </optimistic-locking>
        <sequence-generator name="XML_PROJECT_SEQUENCE_GENERATOR" sequence-name="PROJECT_SEQ" allocation-size="10"/>
        <named-query name="findXMLProjectByName">
            <query>SELECT OBJECT(project) FROM XMLProject project WHERE project.name = :name</query>
        </named-query>
        <exclude-default-listeners/>
        <exclude-superclass-listeners/>
        <pre-persist method-name="prePersist"/>
        <post-persist method-name="postPersist"/>
        <pre-remove method-name="preRemove"/>
        <post-remove method-name="postRemove"/>
        <pre-update method-name="preUpdate"/>
        <post-update method-name="postUpdate"/>
        <post-load method-name="postLoad"/>
        <attributes>
            <id name="id">
                <column name="PROJ_ID"/>
                <generated-value strategy="SEQUENCE" generator="PROJECT_SEQUENCE_GENERATOR"/>
            </id>
            <basic name="name">
                <column name="PROJ_NAME"/>
            </basic>
            <basic name="description">
                <column name="DESCRIP"/>
            </basic>
            <basic name="version">
              <column name="VERSION"/>
            </basic>
            <one-to-one name="teamLeader" target-entity="org.eclipse.persistence.testing.models.jpa.xml.advanced.Employee">
                <join-column name="LEADER_ID"/>
            </one-to-one>
            <many-to-many name="teamMembers" target-entity="org.eclipse.persistence.testing.models.jpa.xml.advanced.Employee" mapped-by="projects"/>
        </attributes>
    </entity>
    <entity name="XMLReadOnlyClass" class="ReadOnlyClass" access="PROPERTY" read-only="true">
        <table name="CMP3_XML_READONLY"/>
        <attributes>
            <id name="id"/>
        </attributes>
    </entity>
    <embeddable class="org.eclipse.persistence.testing.models.jpa.xml.advanced.EmploymentPeriod" access="PROPERTY">
        <attributes>
            <basic name="startDate">
                <column name="S_DATE"/>
				<temporal>DATE</temporal>
            </basic>
            <basic name="endDate">
                <column name="E_DATE"/>
				<temporal>DATE</temporal>
            </basic>
        </attributes>
    </embeddable>
</entity-mappings>
