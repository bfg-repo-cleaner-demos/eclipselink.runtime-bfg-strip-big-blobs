<?xml version="1.0"?>
<!--/*******************************************************************************
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
* which accompanies this distribution.
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*   - multi-word targets use hyphens '-'
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     tware - initial API and implementation
*     egwin - update to adopt calling standards
#******************************************************************************/-->
<project name="org.eclipse.persistence.jpa.modelgen" default="build" basedir=".">
    <available file="../${ant.project.name}" type="dir" property="modelgen.is.local"/>
    <!-- Test to make sure that the calling script doesn't inherit the variable -->
    <!-- (should be set locally, and be destroyed upon return) -->
    <fail message="Not running from '${ant.project.name}' directory" unless="modelgen.is.local"/>

    <dirname  property="modelgen.build.location" file="${ant.file.org.eclipse.persistence.core}"/>
    <condition property="modelgen.2.base.dir" value="../.." else="..">
        <contains string="${modelgen.build.location}" substring="jpa"/>
    </condition>
    <property name="modelgen.2.common.plugins.dir" value="${modelgen.2.base.dir}/plugins"/>
    <property name="modelgen.2.jpa.plugins.dir" value="../plugins"/>

    <echo message="Loading ${user.home}/build.properties..."/>
    <property file="${user.home}/build.properties"/>
    <property file="${modelgen.build.location}/build.properties"/>

    <!-- Primary Targets -->
    <target name="build" depends="clean, compile, package" description="build ModelGen component"/>

    <!-- clean -->
    <target name="clean" description="Clean all generated content">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${classes.dir}"/>
            <fileset dir="${modelgen.2.common.plugins.dir}" includes="${ant.project.name}_*.jar, ${ant.project.name}.source_*.jar, ${eclipselink.modelgen.processor.prefix}_*.jar"/>
        </delete>
    </target>

    <!-- initialize varables and paths needed for compile -->
    <!-- the number of properties needed now is too great for lazy loading without a target -->
    <target name="init">
        <!-- versioning -->
        <!-- These variables  are set in autobuild.xml. A manual build gets defaults -->
        <tstamp>
           <format property="build.date" pattern="yyyyMMdd"/>
           <format property="build.time" pattern="HHmm"/>
        </tstamp>
        <property name="build.type"            value="SNAPSHOT"/>
        <property name="svn.revision"          value="NA"/>
        <property name="version.qualifier"     value="qualifier"/>
        <property name="version.string"        value="${release.version}.${version.qualifier}"/>
        <property name="release.designation"   value="EclipseLink ${release.version} Build"/>
        <property name="specification.vendor"  value="Eclipse.org - EclipseLink Project"/>
        <property name="implementation.vendor" value="${specification.vendor}"/>

        <!-- Generate name for processor jar -->
        <property name="modelgen.processor.jar" value="${eclipselink.modelgen.processor.prefix}_${version.string}.jar"/>

        <!-- dependency properties -->
        <property name="persistence.bundle.path"    value="${modelgen.2.jpa.plugins.dir}/${persistence20.jar}"/>
        <property name="core.bundle.path"           value="${modelgen.2.common.plugins.dir}/org.eclipse.persistence.core_${version.string}.jar"/>
        <property name="jpa.bundle.path"            value="${modelgen.2.common.plugins.dir}/org.eclipse.persistence.jpa_${version.string}.jar"/>

        <!-- dependency tests -->
        <available file="${persistence.bundle.path}" property="persistence.bundle.exist"/>
        <available file="${core.bundle.path}"        property="core.bundle.exist"/>
        <available file="${jpa.bundle.path}"         property="jpa.bundle.exist"/>

        <fail message="Cannot find: '${persistence.bundle.path}'" unless="persistence.bundle.exist"/>
        <fail message="Cannot find: '${core.bundle.path}'"        unless="core.bundle.exist"/>
        <fail message="Cannot find: '${jpa.bundle.path}'"         unless="core.bundle.exist"/>

        <!-- Set Compile Path-->
        <path id="modelgen.compile.path">
            <pathelement path="${modelgen.2.common.plugins.dir}/${antlr}"/>
            <pathelement path="${modelgen.2.common.plugins.dir}/${asm}"/>
            <pathelement path="${core.bundle.path}"/>
            <pathelement path="${jpa.bundle.path}"/>
            <pathelement path="${modelgen.2.common.plugins.dir}/osgi.core.zip"/>
            <pathelement path="${persistence.bundle.path}"/>
            <fileset
                dir="${modelgen.2.common.plugins.dir}"
                includes="${eclipselink.core.depend}"/>
        </path>
    </target>

    <!-- compile -->
    <target name="compile" depends="init" description="Compile bundle code">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               includes="org/eclipse/persistence/**/*.java"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true"
               memoryMaximumSize="512m"
               fork="true"
               classpathref="modelgen.compile.path"
        />
    </target>

    <!-- package -->
    <target name="package" description="jar OSGI bundle">
        <jar jarfile="${modelgen.2.common.plugins.dir}/${ant.project.name}_${version.string}.jar" duplicate="preserve">
             <manifest>
                <attribute name="Specification-Vendor"   value="${specification.vendor}"/>
                <attribute name="Specification-Version"  value="${release.version}"/>
                <attribute name="Implementation-Vendor"  value="${implementation.vendor}"/>
                <attribute name="Implementation-Version" value="${version.string}"/>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-Name"            value="EclipseLink JPA ModelGen"/>
                <attribute name="Bundle-SymbolicName"    value="${ant.project.name}.source"/>
                <attribute name="Bundle-Vendor"          value="${implementation.vendor}"/>
                <attribute name="Bundle-Version"         value="${version.string}"/>
                <attribute name="Eclipse-SourceBundle"   value="${ant.project.name};version=&quot;${version.string}&quot;"/>
            </manifest>
            <fileset dir="${modelgen.2.base.dir}">
                <include name="about.html"/>
                <include name="readme.html"/>
                <include name="license.*"/>
            </fileset>
            <fileset dir="${classes.dir}">
                <include name="org/eclipse/persistence/**/*.class"/>
            </fileset>
            <fileset dir="${resource.dir}">
                <include name="org/eclipse/persistence/**/*"/>
            </fileset>
        </jar>
        <jar jarfile="${modelgen.2.common.plugins.dir}/${ant.project.name}.source_${version.string}.jar" duplicate="preserve">
             <manifest>
                <attribute name="Specification-Vendor"   value="${specification.vendor}"/>
                <attribute name="Specification-Version"  value="${release.version}"/>
                <attribute name="Implementation-Vendor"  value="${implementation.vendor}"/>
                <attribute name="Implementation-Version" value="${version.string}"/>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-Name"            value="EclipseLink JPA ModelGen Source"/>
                <attribute name="Bundle-SymbolicName"    value="${ant.project.name}.source"/>
                <attribute name="Bundle-Vendor"          value="${implementation.vendor}"/>
                <attribute name="Bundle-Version"         value="${version.string}"/>
                <attribute name="Eclipse-SourceBundle"   value="${ant.project.name};version=&quot;${version.string}&quot;"/>
            </manifest>
            <fileset dir="${modelgen.2.base.dir}">
                <include name="about.html"/>
                <include name="readme.html"/>
                <include name="license.*"/>
            </fileset>
            <fileset dir="${src.dir}">
                <include name="org/eclipse/persistence/**/*.java"/>
            </fileset>
            <fileset dir="${resource.dir}">
                <include name="org/eclipse/persistence/**/*"/>
            </fileset>
        </jar>
        <jar jarfile="${modelgen.2.common.plugins.dir}/${modelgen.processor.jar}" duplicate="preserve">
             <manifest>
                <attribute name="Specification-Vendor"   value="${specification.vendor}"/>
                <attribute name="Specification-Version"  value="${release.version}"/>
                <attribute name="Implementation-Vendor"  value="${implementation.vendor}"/>
                <attribute name="Implementation-Version" value="${version.string}"/>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-Name"            value="EclipseLink JPA Canonical Model Processing Service"/>
                <attribute name="Bundle-SymbolicName"    value="${ant.project.name}.cac"/>
                <attribute name="Bundle-Vendor"          value="${implementation.vendor}"/>
                <attribute name="Bundle-Version"         value="${version.string}"/>
            </manifest>
            <fileset dir="${modelgen.2.base.dir}">
                <include name="about.html"/>
                <include name="readme.html"/>
                <include name="license.*"/>
            </fileset>
            <fileset dir="${resource.dir}">
                <include name="META-INF/services/javax.annotation.processing.Processor"/>
            </fileset>
        </jar>
    </target>
</project>