<?xml version="1.0"?>
<!--/*******************************************************************************
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
* which accompanies this distribution.
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*   - multi-word targets use hyphens '-'
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     egwin - initial API and implementation
#******************************************************************************/-->
<project name="eclipselink.core.test.dynamic" default="build" basedir=".">
    <!-- Test to make certain that build is run from component dir -->
    <available file="../${ant.project.name}" type="dir" property="dynamic_test.is.local"/>
    <fail unless="dynamic_test.is.local" message="Not running from '${ant.project.name}' directory"/>

    <!-- OS environment variables have 'env' as a prefix -->
    <property environment="env"/>
    <!-- local property overrides -->
    <property file="${user.home}/build.properties"/>
    <!-- properties checked into SVN -->
    <property file="./build.properties"/>
    <!-- local testing properties overrides -->
    <property file="${user.home}/test.properties"/>
    <!-- testing properties checked into SVN -->
    <property file="./test.properties"/>

    <!-- versioning -->
    <!-- These variables  are set in autobuild.xml. A manual build gets defaults -->
    <tstamp>
       <format property="build.date" pattern="yyyyMMdd"/>
       <format property="build.time" pattern="HHmm"/>
    </tstamp>
    <property name="build.type" value="SNAPSHOT"/>
    <property name="svn.revision" value="NA"/>
    <property name="version.string" value="${release.version}.qualifier"/>
    <property name="release.designation"  value="EclipseLink DeveloperBuild"/>
    <available file="../../${eclipselink.jar.name}" property="eclipselink.jar.exist"/>
    <available file="../../plugins/${asm}" type="dir" property="asm.exist"/>
    <available file="${jdbc.driver.jar}"  property="jdbc.jar.exist"/>

    <!-- Set Compile Path-->
    <path id="dynamic_test.compile.path">
        <pathelement path="${junit.lib}"/>
        <pathelement path="../../${eclipselink.jar.name}"/>
        <pathelement path="../../plugins/${asm}"/>
    </path>
    <!-- Set Run Path-->
    <path id="dynamic_test.run.path">
        <path refid="dynamic_test.compile.path"/>
        <pathelement path="${dynamic.testing.jar.name}"/>
        <pathelement path="${jdbc.driver.jar}"/>
    </path>

    <target name="build" depends="clean, compile-tests, package-tests" description="build dynamicTests.jar"/>

    <!-- MACRO and SCRIPT definitions -->
  <presetdef name="javac">
    <javac
      debug="${javac.debug}"
      debuglevel="${javac.debuglevel}"
      optimize="${javac.optimize}"
      source="${javac.version}"
      target="${javac.version}"
      deprecation="${javac.deprecation}"
      failonerror="true"
      memoryMaximumSize="512m"
    />
  </presetdef>
  <presetdef
    name="DeleteDirQuietly"
    >
    <delete
      dir="_tmp_"
      quiet="true"
      failonerror="false"
    />
  </presetdef>
  <presetdef
    name="DeleteFileQuietly"
    >
    <delete
      file="_tmp_"
      quiet="true"
      failonerror="false"
    />
  </presetdef>

  <!-- clean -->
  <target name="clean" description="Clean generated files for common content">
      <DeleteDirQuietly dir="${classes.dir}"/>
      <DeleteFileQuietly file="${dynamic.testing.jar.name}"/>
	  <delete
        failonerror="false"
		>
        <fileset dir="." includes="TEST*.xml"/>
      </delete>
  </target>

  <!-- compile -->
  <target name="compile-tests" description="compile dynamic tests">
      <fail unless="eclipselink.jar.exist" message="EclipseLink cannot be found. Exiting..."/>
      <fail unless="asm.exist"             message="ASM Bundle cannot be found. Exiting..."/>
      <mkdir dir="${classes.dir}"/>
      <javac
	    srcdir="${src.dir}"
        destdir="${classes.dir}"
        includes="**/*.java"
        fork="true"
        classpathref="dynamic_test.compile.path"
      />
  </target>

  <!-- package -->
  <target name="package-tests" description="package dynamic tests">
        <jar jarfile="${dynamic.testing.jar.name}">
            <fileset dir="${classes.dir}">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${src.dir}">
                <include name="**/*.xml"/>
            </fileset>
        </jar>
  </target>

  <target name="run-tests" description="run dynamic tests">
    <!-- Test dependencies -->
    <available file="${dynamic.testing.jar.name}" property="dynamic.tests.exist"/>
    <condition property="support.test">
        <and>
            <isset property="jdbc.jar.exist"/>
            <isset property="db.platform"/>
            <isset property="dynamic.tests.exist"/>
            <matches
              pattern="org.eclipse.persistence.platform.database.MySQLPlatform"
              string="${db.platform}"
            />
        </and>
    </condition>
    <fail unless="support.test" message="dynamic tests cannot be found. Exiting..."/>
    <DeleteDirQuietly dir="${report.dir}"/>
    <mkdir dir="${report.dir}"/>
    <junit
      outputtoformatters="true"
      printsummary="withOutAndErr"
      fork="yes"
      forkmode="once"
      maxmemory="512m"
      >
      <formatter
        type="xml"
      />
      <classpath>
        <path
          refid="dynamic_test.run.path"
        />
      </classpath>
      <sysproperty
        key="logging.level"
        value="${logging.level}"
      />
      <sysproperty
        key="db.driver"
        value="${db.driver}"
      />
      <sysproperty
        key="db.url"
        value="${db.url}"
      />
      <sysproperty
        key="db.user"
        value="${db.user}"
      />
      <sysproperty
        key="db.pwd"
        value="${db.pwd}"
      />
      <sysproperty
        key="db.platform"
        value="${db.platform}"
      />
      <test name="dynamic.testing.dynamicclassloader.DynamicClassLoaderTestSuite" />
      <test name="dynamic.testing.dynamichelper.DynamicHelperTestSuite" />
      <test name="dynamic.testing.entitytype.AllTests" />
      <test name="dynamic.testing.simple.AllTests" />
      <test name="dynamic.testing.simple.mappings.AllTests" />
      <test name="dynamic.testing.simple.sequencing.AllTests" />
      <test name="dynamic.testing.projectxml.AllTests" />
      <test name="dynamic.testing.employee.AllTests" />
    </junit>
    <junitreport
      todir="${report.dir}"
      >
      <fileset
        dir="."
        >
        <include
          name="TEST*.xml"
        />
      </fileset>
      <report
        format="noframes"
        todir="${report.dir}"
      />
    </junitreport>
  </target>
</project>