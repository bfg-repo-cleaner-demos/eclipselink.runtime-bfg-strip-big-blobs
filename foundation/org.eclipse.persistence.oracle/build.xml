<!--/*******************************************************************************
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
* which accompanies this distribution.
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*   - multi-word targets use hyphens '-'
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     tware - initial API and implementation
*     egwin - update to adopt calling standards
#******************************************************************************/-->
<!-- This ant project includes the following tasks:
        - build (default) : cleans, compiles, and packages all tests
        - clean   : cleans up all generated files and dirs
        - compile : compiles all classes
        - package : packages the oracle extensions OSGi bundle jar.
-->
<project name="org.eclipse.persistence.oracle" default="build" basedir=".">
    <available file="../${ant.project.name}" type="dir" property="oracle.is.local"/>
    <!-- Test to make sure that the calling script doesn't inherit the variable -->
    <!-- (should be set locally, and be destroyed upon return) -->
    <fail message="Not running from '${ant.project.name}' directory" unless="oracle.is.local"/>

    <dirname  property="oracle.build.location" file="${ant.file.org.eclipse.persistence.oracle}"/>
    <condition property="oracle.2.common.plugins.dir" value="../../plugins" else="../plugins">
        <contains string="${oracle.build.location}" substring="foundation"/>
    </condition>
    <property name="oracle.plugins.dir" value="../plugins"/>
    
    <property file="${user.home}/build.properties"/>
    <!-- Sets default junit.lib and all extensions.depend dir locations to defaults based upon discovered dir heirarchy -->
    <!-- Must be defined after ${user.home}/build.properties is included to allow redefinition -->
    <condition property="oracle.extensions.depend.dir" value="../../../extension.oracle.lib.external" else="../../extension.oracle.lib.external">
        <contains string="${oracle.build.location}" substring="foundation"/>
    </condition>
    <property file="build.properties"/>

    <!-- versioning -->
    <!-- These variables  are set in autobuild.xml. A manual build gets defaults -->
    <tstamp>
       <format property="build.date" pattern="yyyyMMdd"/>
    </tstamp>
    <property name="build.type" value="SNAPSHOT"/>
    <property name="svn.revision" value="NA"/>
    <property name="version.string" value="${release.version}.${build.date}-${build.type}"/>
    <property name="release.designation"  value="EclipseLink DeveloperBuild"/>

    <!-- Set Compile Path-->
    <!-- Need multiple extensions dir includes because different systems are defaulting to different locations -->
    <path id="oracle.compile.path">
        <pathelement path="${oracle.2.common.plugins.dir}/org.eclipse.persistence.core_${version.string}.jar"/>
        <fileset
            dir="${oracle.2.common.plugins.dir}"
            includes="${eclipselink.core.depend}"/>
        <fileset
            dir="${oracle.extensions.depend.dir}"
            includes="${oracle.extensions.depend.jars}"/>
        <fileset
            dir="${extensions.depend.dir}"
            includes="${oracle.extensions.depend.jars}"/>
    </path>
    <available file="${oracle.2.common.plugins.dir}/org.eclipse.persistence.core_${version.string}.jar" property="core.bundle.exist"/>
    <available file="${oracle.extensions.depend.dir}" type="dir" property="oracle.depend.dir.exist"/>

    <!-- all -->
    <target name="build" depends="clean, compile, package" description="build oracle component"/>

    <!-- clean -->
    <target name="clean" description="Clean all generated content">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${classes.dir}"/>
            <fileset dir="${oracle.2.common.plugins.dir}" includes="${eclipselink.extension.oracle.bndl.prefix}*.jar"/>
        </delete>
    </target>

    <!-- compile -->
    <target name="compile" description="Compile EclipseLink Oracle extensions">
        <fail message="Cannot find Core: '${oracle.2.common.plugins.dir}/org.eclipse.persistence.core_${version.string}.jar'." unless="core.bundle.exist"/>
        <fail message="Cannot find Dependency dir:'${oracle.extensions.depend.dir}'." unless="oracle.depend.dir.exist"/>
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               includes="org/eclipse/persistence/**/*.java"
               debug="${javac.debug}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true"
               memoryMaximumSize="512m"
               fork="true"
               classpathref="oracle.compile.path"
        />
    </target>

    <target name="package" description="jar OSGI bundles">
        <jar jarfile="${oracle.plugins.dir}/${eclipselink.extension.oracle.bndl.prefix}.jar" manifest="META-INF/MANIFEST.MF">
            <fileset dir="${classes.dir}">
                <include name="org/eclipse/persistence/**/*.class"/>
            </fileset>
        </jar>
        <jar jarfile="${oracle.plugins.dir}/${eclipselink.extension.oracle.bndl.prefix}.source.jar">
             <manifest>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-Name"            value="EclipseLink Oracle Extensions Source"/>
                <attribute name="Bundle-SymbolicName"    value="${ant.project.name}"/>
                <attribute name="Bundle-Version"         value="${release.version}"/>
                <attribute name="Eclipse-SourceBundle"   value="${ant.project.name};version=&quot;${release.version}&quot;"/>
            </manifest>
            <fileset dir="${src.dir}">
                <include name="org/eclipse/persistence/**/*.java"/>
            </fileset>
        </jar>
    </target>

    <!--  This target is used ONCE at the beginning of a release to update the bundle manifest files.  -->
    <!--  Do not run it, or hook it up to the "build" target -->
    <target name="update-manifest" if="svn.exec" description="update and check-in the manifest">
        <filter token="VERSION" value="${release.version}"/>
        <delete file="META-INF/MANIFEST.MF" failonerror="false"/>
        <copy file="META-INF/MANIFEST.template" tofile="META-INF/MANIFEST.MF" filtering="true"/>
        <exec executable="${svn.exec}" failonerror="false" logError="true">
            <arg value="commit"/>
            <arg value="-m ${version.string}"/>
            <arg value="META-INF/MANIFEST.MF"/>
        </exec>
    </target>

</project>
