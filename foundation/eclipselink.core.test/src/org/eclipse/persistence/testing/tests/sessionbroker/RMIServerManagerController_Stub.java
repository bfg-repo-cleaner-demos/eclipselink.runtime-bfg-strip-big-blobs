// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.eclipse.persistence.testing.tests.sessionbroker;

public final class RMIServerManagerController_Stub extends java.rmi.server.RemoteStub implements org.eclipse.persistence.testing.tests.sessionbroker.RMISessionBrokerServerManager, 
                                                                                                 java.rmi.Remote {
    private static final java.rmi.server.Operation[] operations = 
    { new java.rmi.server.Operation("org.eclipse.persistence.sessions.remote.rmi.RMIRemoteSessionController createRemoteSessionController()") };

    private static final long interfaceHash = -8836344415525738722L;

    private static final long serialVersionUID = 2;

    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_createRemoteSessionController_0;

    static {
        try {
            java.rmi.server.RemoteRef.class.getMethod("invoke", 
                                                      new java.lang.Class[] { java.rmi.Remote.class, java.lang.reflect.Method.class, 
                                                                              java.lang.Object[].class, 
                                                                              long.class });
            useNewInvoke = true;
            $method_createRemoteSessionController_0 = 
                    org.eclipse.persistence.testing.tests.sessionbroker.RMISessionBrokerServerManager.class.getMethod("createRemoteSessionController", 
                                                                                                            new java.lang.Class[] { });
        } catch (java.lang.NoSuchMethodException e) {
            useNewInvoke = false;
        }
    }

    // constructors

    public RMIServerManagerController_Stub() {
        super();
    }

    public RMIServerManagerController_Stub(java.rmi.server.RemoteRef ref) {
        super(ref);
    }

    // methods from remote interfaces

    // implementation of createRemoteSessionController()

    public org.eclipse.persistence.sessions.remote.rmi.RMIRemoteSessionController createRemoteSessionController() throws java.rmi.RemoteException {
        try {
            if (useNewInvoke) {
                Object $result = 
                    ref.invoke(this, $method_createRemoteSessionController_0, null, 8990065176536303129L);
                return ((org.eclipse.persistence.sessions.remote.rmi.RMIRemoteSessionController)$result);
            } else {
                java.rmi.server.RemoteCall call = 
                    ref.newCall((java.rmi.server.RemoteObject)this, operations, 0, interfaceHash);
                ref.invoke(call);
                org.eclipse.persistence.sessions.remote.rmi.RMIRemoteSessionController $result;
                try {
                    java.io.ObjectInput in = call.getInputStream();
                    $result = (org.eclipse.persistence.sessions.remote.rmi.RMIRemoteSessionController)in.readObject();
                } catch (java.io.IOException e) {
                    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
                } catch (java.lang.ClassNotFoundException e) {
                    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
                } finally {
                    ref.done(call);
                }
                return $result;
            }
        } catch (java.lang.RuntimeException e) {
            throw e;
        } catch (java.rmi.RemoteException e) {
            throw e;
        } catch (java.lang.Exception e) {
            throw new java.rmi.UnexpectedException("undeclared checked exception", e);
        }
    }
}
