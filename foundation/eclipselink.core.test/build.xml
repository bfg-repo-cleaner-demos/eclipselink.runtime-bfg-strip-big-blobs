<project name="Eclipse Persistence Services" default="all" basedir=".">

	<property file="${user.home}/build.properties"/>
    <property file="./build.properties"/>

    <path id="compile.path">
        <pathelement path="${eclipselink.core.lib}/eclipselink-antlr.jar"/>
        <pathelement path="${eclipselink.core.lib}/eclipselink-asm.jar"/>
        <pathelement path="${junit.lib}"/>
        <fileset
            dir="${eclipselink.core.lib}"
            includes="${eclipselink.core.depend}"/>
        <pathelement path="${eclipselink.core}/${classes.dir}"/>
    </path>
	
    <!-- all -->
    <target name="all" depends="clean, compile, process.resource" description="build EclipseLink jar"/>
	
    <!-- compile --> 
    <target name="compile" depends="" description="compile EclipseLink core tests">  
        <mkdir dir="${eclipselink.core.test}/${classes.dir}"/>
        <javac srcdir="${eclipselink.core.test}/${src.dir}" 
               destdir="${eclipselink.core.test}/${classes.dir}"
               includes="org/eclipse/persistence/**, deprecated/**"
               debug="${javac.debug}" 
               optimize="${javac.optimize}"
               source="1.5" 
               deprecation="${javac.deprecation}"
               failonerror="true"
               memoryMaximumSize="512m"
               fork="true">
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>
	
    <target name="process.resource">
        <filter token="dbUser" value="${db.user}"/>
        <filter token="dbPassword" value="${db.password}"/>
        <filter token="driverClass" value="${db.driver}"/>
        <filter token="dbURL" value="${db.url}"/>
        <filter token="loglevel" value="${eclipselink.log.level}"/>
        <filter token="boolvalue" value="${eclipselink.logging.boolvalue}"/>
        <filter token="dbPlatform" value="${db.platform}"/>
        <copy todir="${eclipselink.core.test}/${classes.dir}" filtering="true">
            <fileset dir="${eclipselink.core.test}/${resource.dir}"
                excludes="**/Employee_utf16.xml, **/NLSJapaneseMWIntegrationTestEmployeeProject.xml"/>
         </copy>
         <copy todir="${eclipselink.core.test}/${classes.dir}" filtering="true" encoding="UTF-16">
            <fileset dir="${eclipselink.core.test}/${resource.dir}" includes="**/Employee_utf16.xml"/>
         </copy>
          <copy todir="${eclipselink.core.test}/${classes.dir}" filtering="true" encoding="UTF-8">
            <fileset dir="${eclipselink.core.test}/${resource.dir}" includes="**/NLSJapaneseMWIntegrationTestEmployeeProject.xml"/>
         </copy>
    </target>

    <target name="test" depends="process.resource">
        <java   classname="org.eclipse.persistence.testing.framework.PromptTestRunner"
             fork="true"
             maxmemory="512m"
             failonerror="true">
            <jvmarg value="-Djava.security.policy=${eclipselink.core.test}/resource/java.policy.allpermissions"/>
            <arg value="pfile=${eclipselink.core.test}/resource/automated.test.properties " />
            <arg value="testmodel=org.eclipse.persistence.testing.tests.TestRunModel" />
            <arg value="regressionlog=core.test.regression.log" />
            <classpath>
                <pathelement path="."/>
                <pathelement path="${eclipselink.core.test}/${classes.dir}"/>
                <path refid="compile.path"/>
                <pathelement path="${eclipselink.core}/${resource.dir}"/>
                <pathelement path="${eclipselink.extension.oracle}/eclipselink-extension-oracle.jar"/>
                <pathelement path="${jdbc.driver.jar}"/>
                <pathelement path="${tools.jar}"/>
            </classpath>
        </java>
    </target>

    <target name="clean" description="Clean the build">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${eclipselink.core.test}/${classes.dir}"/>
        </delete>
    </target>

</project>