<?xml version="1.0"?>
<!--/*******************************************************************************
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
* which accompanies this distribution.
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*   - multi-word targets use hyphens '-'
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     egwin - initial API and implementation
#******************************************************************************/-->
<project
  name="eclipselink.dbws.test"
  default="all"
  basedir="."
  >
  <condition property="is.java.version.16">
      <equals arg1="${ant.java.version}" arg2="1.6"/>
  </condition>
  <fail
    message="eclipselink.dbws.test requires Java version 1.6 or higher. You are currently using Java version ${ant.java.version}."
    unless="is.java.version.16"
  />
  <!-- OS environment variables have 'env' as a prefix -->
  <property
    environment="env"
  />
  <!-- local property overrides -->
  <property
    file="${user.home}/build.properties"
  />
  <property
    file="${user.home}/test.properties"
  />
  <!-- find out where this build.xml file is -->
  <dirname
    property="eclipselink.dbws.test"
    file="${ant.file.eclipselink.dbws.test}"
  />
  <property
    file="${eclipselink.dbws.test}/build.properties"
  />
  <property
    file="${eclipselink.dbws.test}/test.properties"
  />
  <!-- Classpath used for compiling tests. -->
  <path
    id="compile.path"
    >
    <pathelement
      path="${junit.lib}"
    />
    <pathelement
      path="${eclipselink.jar.name}"
    />
    <pathelement
      path="${eclipselink.plugins}/${asm}"
    />
    <fileset
      dir="${eclipselink.plugins}"
      includes="${eclipselink.dbws.depend}"
    />
  </path>
  <presetdef name="javac">
    <javac
      debug="${javac.debug}"
      optimize="${javac.optimize}"
      source="${javac.version}"
      deprecation="${javac.deprecation}"
      failonerror="true"
      memoryMaximumSize="512m"
      fork="true"
    />
  </presetdef>
  <presetdef
    name="DeleteDirQuietly"
    >
    <delete
      dir="_tmp_"
      quiet="true"
      failonerror="false"
    />
  </presetdef>
  <presetdef
    name="DeleteFileQuietly"
    >
    <delete
      file="_tmp_"
      quiet="true"
      failonerror="false"
    />
  </presetdef>
  <scriptdef
    name="toLower"
    language="javascript"
    manager="javax"
    >
    <attribute name="input"/>
    <attribute name="property"/>
    <![CDATA[
      // getting the value
      input = attributes.get("input");
      property = attributes.get("property");
      if (input == null || property == null) {
         self.fail("both 'input' and 'property' attributes must be set.");
      }
      lowercaseInput = input.toLowerCase();
      // put result into property - NB overwrites previous value! Not safe for <parallel> tasks
      project.setProperty(attributes.get("property"), lowercaseInput);
    ]]>
  </scriptdef>
  <!-- slightly complex way to do if-then-else in Ant without additional macros -->
  <target
    name="should-compile-common"
    depends="compile-common,dont-compile-common"
  />
  <target
    name="compile-common"
    unless="eclipselink.dbws.common.available"
    depends="test-common-available"
    >
    <javac
      srcdir="${eclipselink.dbws.test}/${src.dir}"
      destdir="${eclipselink.dbws.test}/${classes.dir}"
      includes="dbws/testing/*.java"
      >
      <classpath>
        <path refid="compile.path"/>
      </classpath>
    </javac>
    <jar
      destfile="${eclipselink.dbws.test}/${eclipselink.dbws.test.common.jlib}"
      >
			<fileset
        dir="${eclipselink.dbws.test}/${classes.dir}"
        includes="dbws/testing/*.class"
			/>
    </jar>
  </target>
  <target
    name="dont-compile-common"
    if="eclipselink.dbws.common.available"
    depends="test-common-available"
    >
  </target>
  <target
    name="test-common-available"
    >
    <available
      file="${eclipselink.dbws.test}/${eclipselink.dbws.test.common.jlib}"
      type="file"
      property="eclipselink.dbws.common.available"
    />
  </target>
  <target
      name="init"
      depends="should-compile-common"
      >
      <path
        id="run.path"
        >
        <path
          refid="compile.path"
        />
        <pathelement
          path="${jdbc.driver.jar}"
        />
        <pathelement
          path="${eclipselink.dbws.test}/${eclipselink.dbws.test.common.jlib}"
        />
      </path>
      <DeleteDirQuietly dir="${eclipselink.dbws.test}/${report.dir}"/>
      <mkdir dir="${eclipselink.dbws.test}/${report.dir}"/>
  </target>
  <macrodef
    name="SetupDatabase"
    >
    <attribute name="testsuite-name"/>
    <sequential>
      <sql
        onerror="continue"
        keepformat="true"
        driver="${db.driver}"
        url="${db.url}"
        userid="${db.user}"
        password="${db.pwd}"
        classpathref="run.path"
        delimiter="|"
        >
        <fileset
          dir="${eclipselink.dbws.test}/${etc.dir}"
          >
         <include name="dbsetup_@{testsuite-name}.sql"/>
        </fileset>
      </sql>
    </sequential>
  </macrodef>
  <macrodef
    name="CompileTestsuite"
    >
    <attribute name="testsuite-name"/>
    <attribute name="package-name"/>
    <sequential>
      <javac
        srcdir="${eclipselink.dbws.test}/${src.dir}"
        destdir="${eclipselink.dbws.test}/${classes.dir}"
        includes="dbws/testing/@{package-name}/*.java"
        classpathref="run.path"
      />
    </sequential>
  </macrodef>
  <macrodef
    name="RunTestsuite"
    >
    <attribute name="testsuite-name"/>
    <attribute name="package-name"/>
    <sequential>
      <junit
        printsummary="withOutAndErr"
        fork="yes"
        forkmode="once"
        maxmemory="512m"
        >
        <formatter
          type="xml"
        />
        <classpath>
          <path
            refid="run.path"
          />
          <pathelement
            path="${eclipselink.dbws.test}/${classes.dir}"
          />
        </classpath>
        <sysproperty
          key="eclipselink.logging.level"
          value="${logging.level}"
        />
        <sysproperty
          key="db.driver"
          value="${db.driver}"
        />
        <sysproperty
          key="db.url"
          value="${db.url}"
        />
        <sysproperty
          key="db.user"
          value="${db.user}"
        />
        <sysproperty
          key="db.pwd"
          value="${db.pwd}"
        />
        <sysproperty
          key="db.platform"
          value="${db.platform}"
        />
        <test
          name="dbws.testing.@{package-name}.@{testsuite-name}TestSuite"
        />
      </junit>
      <junitreport
        todir="${eclipselink.dbws.test}/${report.dir}"
        >
        <fileset
          dir="."
          >
          <include
            name="TEST-*TestSuite.xml"
          />
        </fileset>
        <report
          format="noframes"
          todir="${eclipselink.dbws.test}/${report.dir}"
        />
      </junitreport>
    </sequential>
  </macrodef>
  <macrodef
    name="TeardownDatabase"
    >
    <attribute name="testsuite-name"/>
    <sequential>
      <sql
        onerror="continue"
        keepformat="true"
        driver="${db.driver}"
        url="${db.url}"
        userid="${db.user}"
        password="${db.pwd}"
        classpathref="run.path"
        delimiter="|"
        >
        <fileset
          dir="${eclipselink.dbws.test}/${etc.dir}"
          >
         <include name="dbteardown_@{testsuite-name}.sql"/>
        </fileset>
      </sql>
    </sequential>
  </macrodef>
  <macrodef
    name="SetupCompileRunTeardown"
    >
    <attribute name="testsuite-name"/>
    <sequential>
      <toLower
        input="@{testsuite-name}"
        property="package-name"
      />
      <SetupDatabase
        testsuite-name="${package-name}"
      />
      <CompileTestsuite
        testsuite-name="@{testsuite-name}"
        package-name="${package-name}"
      />
      <RunTestsuite
        testsuite-name="@{testsuite-name}"
        package-name="${package-name}"
      />
      <TeardownDatabase
        testsuite-name="${package-name}"
      />
    </sequential>
  </macrodef>
  <target
    name="all"
    depends="init"
    description="setup, compile, and run dbws util testsuites"
    >
    <SetupCompileRunTeardown testsuite-name="KeyMappings"/>
    <SetupCompileRunTeardown testsuite-name="Relationships"/>
  </target>
</project>