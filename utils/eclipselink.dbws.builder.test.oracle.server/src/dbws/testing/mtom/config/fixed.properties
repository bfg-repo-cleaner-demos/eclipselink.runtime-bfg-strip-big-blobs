custom = true
#
#  Ant naming conventions:
#      - regardless of the actual OS platform,'/' is the directory separator
#        (Ant will convert as appropriate).
#      - properties have periods '.', task-names have hyphens '-'.
#      - OS environment variables are in ALLCAPS and have 'env' as a prefix
#        e.g. ${env.XXX}.
#      - Ant properties are lower case.
#      - xxx.home = root of a product or component's installation.
#      - xxx.dir = root of a directory structure.
#      - xxx.lib.dir = a directory that contains libraries such as JNI dll's.
#      - xxx.native.dir = a staging directory to build JNI dll's.
#      - xxx.jlib.dir = a directory that contains jars, also known
#        as "java libraries".
#      - xxx.jlib = comma-separated list of jars.
#      - tasks with the word 'compile' in them compile (obviously!)
#        Java source to the staging directory.
#      - tasks with the word 'build' in them extract from the staging
#        directory Java class files (and other runtime artifacts such
#        as MANIFEST.MF files,deployment XML files,etc) using a variety
#        of inclusion and/or exclusion patterns in order to create
#        a Java archive of some sort: jar,war,ear.
#
# Please do NOT alter the values for any of the following properties:
#
# General properties for example
#
stage.dir=${basedir}/stage
src.dir=${basedir}/src
#
# Database properties - this example is only supported on Oracle
#
db.driver=oracle.jdbc.OracleDriver
#
# DBWS properties
#
db.platform=org.eclipse.persistence.platform.database.oracle.Oracle11Platform
dbws.builder.file=dbws-builder.xml
eclipselink.home=${env.ECLIPSELINK_HOME}
eclipselink.jlib.dir=${eclipselink.home}/jlib
eclipselink.jlib=eclipselink.jar
dbws.util.jlib.dir=${eclipselink.home}/utils/dbws
dbws.util.jlib=javax.servlet_*.jar,javax.wsdl_*.jar,eclipselink-dbwsutils.jar,org.eclipse.persistence.oracleddlparser_*.jar
#
# Misc Ant-specific properties
#
build.sysclasspath=ignore