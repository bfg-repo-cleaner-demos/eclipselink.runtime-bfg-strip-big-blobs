/*******************************************************************************
* Copyright (c) 2007 Oracle. All rights reserved.
* This program and the accompanying materials are made available under the terms of
* the Eclipse Public License v1.0, which accompanies this distribution and is available at
* http://www.eclipse.org/legal/epl-v10.html.
*
* Contributors:
*     Oracle - initial API and implementation
******************************************************************************/
package org.eclipse.persistence.tools.workbench.mappingsmodel.query.relational;

import org.eclipse.persistence.tools.workbench.mappingsmodel.MWModel;

import org.eclipse.persistence.descriptors.ClassDescriptor;
import org.eclipse.persistence.oxm.XMLDescriptor;
import org.eclipse.persistence.queries.ObjectLevelReadQuery;

/**
 * This class is used for queries which are auto generated.
 * EJB finder queries are an example.  The user does not set up a query string
 * or the query options.
 */
public final class MWAutoGeneratedQueryFormat extends MWQueryFormat 
{
	/**
	 * Default constructor - for TopLink use only.
	 */	
	private MWAutoGeneratedQueryFormat() {
		super();
	}
	
	MWAutoGeneratedQueryFormat(MWRelationalSpecificQueryOptions parent) {
		super(parent);
	}

	String getType() {
		return MWRelationalQuery.AUTO_GENERATED_FORMAT;
	}
	
	
	//persistence
	public static XMLDescriptor buildDescriptor() 
	{
		XMLDescriptor descriptor = new XMLDescriptor();

		descriptor.setJavaClass(MWAutoGeneratedQueryFormat.class);

		descriptor.getInheritancePolicy().setParentClass(MWQueryFormat.class);
		
		return descriptor;
	}
	public static ClassDescriptor legacy50BuildDescriptor() 
	{
		ClassDescriptor descriptor = MWModel.legacy50BuildStandardDescriptor();
		descriptor.descriptorIsAggregate();
		descriptor.setJavaClass(MWAutoGeneratedQueryFormat.class);

		descriptor.getInheritancePolicy().setParentClass(MWQueryFormat.class);
		
		return descriptor;
	}
    
	public static ClassDescriptor legacy45BuildDescriptor() 
	{
		ClassDescriptor descriptor = MWModel.legacy45BuildStandardDescriptor();
		descriptor.descriptorIsAggregate();

		descriptor.setJavaClass(MWAutoGeneratedQueryFormat.class);
		descriptor.setTableName("AutoGeneratedQueryFormat");
		descriptor.getInheritancePolicy().setParentClass(MWQueryFormat.class);
	
	    return descriptor;
	}	
	
	//Conversion methods
	void convertToRuntime(ObjectLevelReadQuery runtimeQuery) 
	{
		//do nothing for conversion to runtime
	}
	void convertFromRuntime(ObjectLevelReadQuery runtimeQuery)
	{
		//do nothing for conversion from runtime
	}
}