<?xml version="1.0"?>
<!--/*******************************************************************************
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
* which accompanies this distribution.
* The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
* and the Eclipse Distribution License is available at
* http://www.eclipse.org/org/documents/edl-v10.php.
*
*   Ant naming conventions:
*   - regardless of the actual OS platform,'/' is the directory separator
*     (Ant will convert as appropriate).
*   - multi-word properties use periods '.'
*   - multi-word targets use hyphens '-'
*   - multi-word macros use underscores '_'
*   - multi-word macro attributes are concatinated
*     e.g. 'runpathref'
*   - multi-word tasks (taskdef) names are concatinated
*     e.g. 'validateconnection'
*   - OS environment variables are in ALLCAPS and have 'env' as a prefix
*     e.g. ${env.XXX}.
*   - Ant properties are lower case.
*
* Contributors:
*     tware - initial API and implementation
#******************************************************************************/-->
<project name="eclipselink.utils.dbws" default="all" basedir=".">

    <target name="init">
        <property file="${user.home}/build.properties"/>
        <property file="${basedir}/build.properties"/>

        <path id="compile.path">
            <pathelement path="${eclipselink.plugins}/${asm}"/>
            <pathelement path="${eclipselink.core}/${classes.dir}"/>
            <pathelement path="${eclipselink.dbws}/${classes.dir}"/>
            <pathelement path="${wsdl.lib}"/>
        </path>
    </target>

    <target name="all" depends="clean, create-jar" description="build EclipseLink jar"/>

    <target name="verify-dependencies" depends="init" description="verify core classes were compiled">
        <available file="${eclipselink.core}/${classes.dir}/org/eclipse/persistence/Version.class"        property="core.classes.exist"/>
        <available file="${eclipselink.dbws}/${classes.dir}/org/eclipse/persistence/dbws/DBWSModel.class" property="dbws.classes.exist"/>
        <available file="${eclipselink.plugins}/${asm}"                                    type="dir"     property="asm.exist"/>
        <available file="${wsdl.lib}"                                                                     property="wsdl.exist"/>
        <fail unless="core.classes.exist" message="Core Classes cannot be found (check they compiled). Exiting..."/>
        <fail unless="dbws.classes.exist" message="DBWS Classes cannot be found (check they compiled). Exiting..."/>
        <fail unless="asm.exist"          message="ASM Bundle cannot be found. Exiting..."/>
        <fail unless="wsdl.exist"         message="WSDL Library cannot be found. Exiting..."/>
    </target>

    <!-- target name="compile" description="build dbws-util classes" -->
    <target name="compile" depends="verify-dependencies" description="build dbws util classes">
        <mkdir dir="${eclipselink.util.dbws}/${classes.dir}"/>
        <javac srcdir="${eclipselink.util.dbws}/${src.dir}"
               destdir="${eclipselink.util.dbws}/${classes.dir}"
               debug="${javac.debug}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true"
               includes="**/*.java"
               memoryMaximumSize="512m"
               fork="true">
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <!-- Packages util-dbws jar. -->
    <target name="create-jar" depends="compile" description="build DBWS util jar">
        <delete file="${eclipselink.util.dbws}/${dbws-util.jar.name}"/>
        <jar jarfile="${eclipselink.util.dbws}/${dbws-util.jar.name}">
            <fileset dir="${eclipselink.util.dbws}/${classes.dir}">
                <include name="**/*.class"/>
            </fileset>
        </jar>
    </target>

    <target name="clean" depends="init" description="clean the build">
        <delete dir="${eclipselink.util.dbws}/${classes.dir}" includeEmptyDirs="true" failonerror="false"/>
    </target>
</project>
